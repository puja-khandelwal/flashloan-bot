{"version":3,"sources":["views/pages/Plan/PlanData.js","views/pages/Plan/AddPlan.js","views/pages/Plan/PlanList.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","TableRow","PlanData","data","index","classes","handleEditView","setIsOpenView","setIsOpenEdit","handleLists","useHistory","useState","loader","setLoader","handleDelete","deleteData","a","axios","method","url","ApiConfig","deleteSubscriptionPlan","headers","token","sessionStorage","getItem","localStorage","subscribeId","_id","res","responseCode","toast","success","responseMessage","console","log","response","message","key","TableCell","component","scope","align","name","price","months","style","status","color","Box","display","Grid","container","justify","item","Tooltip","title","IconButton","padding","onClick","fontSize","cursor","marginRight","isDelete","Delete","disabled","useStyles","makeStyles","avatorSection","childSection","position","iconBtn","border","right","top","template","alignItems","width","borderRadius","margin","formInitialSchema","planname","time","formValidationSchema","yup","shape","required","AddPlan","type","openWallect","setOpenWallect","useWeb3React","account","activate","user","chainId","library","deactivate","useContext","UserContext","HandleWalletModal","connectWallet","handleFormSubmit","values","addSubscriptionPlan","params","Paper","elevation","className","WalletConnectModal","open","handleClose","ArrowBack","Typography","variant","mt","mb","Divider","onSubmit","initialValues","validationSchema","errors","handleBlur","handleChange","touched","handleSubmit","setFieldValue","spacing","lg","md","sm","xs","TextField","placeholder","fullWidth","value","error","Boolean","onBlur","onChange","FormHelperText","onKeyPress","event","preventDefault","Button","ButtonCircularProgress","connetwallet","background","boxShadow","boxSizing","backdropFilter","breakpoints","down","addFarner","justifyContent","mainBox","height","PlanList","isOpenView","isOpenEdit","isOpenAdd","setIsOpenAdd","viewPlan","setViewPlan","planDataList","setPlanDataList","id","viewSubscriptionPlan","result","PlansList","listSubscriptionPlan","useEffect","pt","pb","TableContainer","Table","table","aria-label","TableHead","TableBody","length","map"],"mappings":"+eAwBMA,EAAiBC,aAAW,SAACC,GAAD,MAAY,CAC5CC,KAAM,CACJ,sBAAuB,CACrBC,gBAAiB,aAEnB,qBAAsB,CACpBA,gBAAiB,eANAH,CASnBI,KAEW,SAASC,EAAT,GAQX,IAPFC,EAOC,EAPDA,KAEAC,GAKC,EANDC,QAMC,EALDD,OAGAE,GAEC,EAJDC,cAIC,EAHDC,cAGC,EAFDF,gBACAG,EACC,EADDA,YAGA,GADgBC,cACQC,mBAAS,KAAjC,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEjBH,GAAU,GAFO,SAGCI,IAAM,CACtBC,OAAQ,SACRC,IAAKC,IAAUC,uBACfC,QAAS,CACPC,MACEC,eAAeC,QAAQ,UACvBC,aAAaD,QAAQ,wBAEzBtB,KAAM,CACJwB,YAAW,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAYa,OAZZ,OAgBY,MAbvBC,EAHW,QAgBT1B,KAAK2B,eAEXC,IAAMC,QAAQH,EAAI1B,KAAK8B,iBACvBxB,IACAI,GAAU,IApBK,gDAuBjBA,GAAU,GACVqB,QAAQC,IAAR,MACI,KAAMC,SACRL,IAAMC,QAAQ,KAAMI,SAASjC,KAAK8B,iBAElCF,IAAMC,QAAQ,KAAMK,SA5BL,yDAAH,sDAiClB,OACE,oCAIE,kBAACzC,EAAD,CAAgB0C,IAAKnC,EAAKyB,KACxB,kBAACW,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,OAC7BrC,EAAQ,GAEX,kBAACmC,EAAA,EAAD,CAAWG,MAAM,QAAQvC,EAAKwC,KAAOxC,EAAKwC,KAAO,OAEjD,kBAACJ,EAAA,EAAD,CAAWG,MAAM,QAAjB,OAAyBvC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMyC,OAC/B,kBAACL,EAAA,EAAD,CAAWG,MAAM,QAAjB,OAAyBvC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAM0C,QAE/B,kBAACN,EAAA,EAAD,CACEG,MAAM,OACNI,MAAsB,SAAf3C,EAAK4C,OAAoB,CAAEC,MAAO,OAAU,IAEnC,SAAf7C,EAAK4C,OAAoB,UAAY,UAGxC,kBAACR,EAAA,EAAD,CAAWG,MAAM,QACf,kBAACO,EAAA,EAAD,CAAKC,QAAQ,QACX,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACtB,kBAACJ,EAAA,EAAD,CAAKK,MAAI,EAACJ,QAAQ,QAChB,kBAACK,EAAA,EAAD,CAASC,MAAM,qBACb,kBAACC,EAAA,EAAD,CAAYX,MAAO,CAAEY,QAAS,aAC5B,kBAAC,IAAD,CACEC,QAAS,kBAAMrD,EAAeH,IAC9B2C,MAAO,CACLc,SAAU,OACVC,OAAQ,UACRC,YAAa,WAKnB3D,EAAK4D,SAgBL,kBAACR,EAAA,EAAD,CAASC,MAAM,gBACb,kBAACC,EAAA,EAAD,CAAYX,MAAO,CAAEY,QAAS,aAC5B,kBAACM,EAAA,EAAD,CAGElB,MAAO,CACLc,SAAU,OACVC,OAAQ,OACRC,YAAa,MACbd,MAAO,OAETiB,SAAUrD,MA1BhB,kBAAC2C,EAAA,EAAD,CAASC,MAAM,uBACb,kBAACC,EAAA,EAAD,CAAYX,MAAO,CAAEY,QAAS,aAC5B,kBAACM,EAAA,EAAD,CAEEL,QAAS,kBAAM7C,EAAaX,IAC5B2C,MAAO,CACLc,SAAU,OACVC,OAAQ,UACRC,YAAa,OAEfG,SAAUrD,Y,+FC3G5BsD,EAAYC,aAAW,SAACrE,GAAD,MAAY,CACvCsE,cAAe,CACb,YAAe,OACf,aAAgB,QAElBC,aAAc,CACZC,SAAU,YAEZC,QAAS,CACPC,OAAQ,iBACRF,SAAU,WACVG,MAAO,QACPC,IAAK,MACLhB,QAAS,4BAEXiB,SAAU,CACRzB,QAAS,QACT0B,WAAY,SACZJ,OAAQ,oBACRK,MAAO,cACPnB,QAAS,OACToB,aAAc,OACdC,OAAQ,iBAGNC,EAAoB,CACxBC,SAAU,GACVrC,MAAO,GACPsC,KAAM,IAEFC,EAAuBC,MAAaC,MAAM,CAC9CJ,SAAUG,MAAaE,SAAS,yBAChC1C,MAAOwC,MAAaE,SAAS,0BAC7BJ,KAAME,MAAaE,SAAS,0BAGf,SAASC,EAAT,GAAiD,IAA9B/E,EAA6B,EAA7BA,cAAegF,EAAc,EAAdA,KAAMrF,EAAQ,EAARA,KAC/CE,EAAU6D,IAChB,EAAsCvD,oBAAS,GAA/C,mBAAO8E,EAAP,KAAoBC,EAApB,KACA,EAA4DC,cAA1CC,GAAlB,EAAQC,SAAR,EAAkBD,SACZE,GADN,EAA2BC,QAA3B,EAAoCC,QAApC,EAA6CC,WAChCC,qBAAWC,MACxB,EAAkCxF,mBAAS,IAA3C,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMuF,EAAoB,WACxBV,GAAe,GACfI,EAAKO,iBAKDC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAvF,EAAA,yDACvBkB,QAAQC,IAAI,aAAcoE,GAC1B1F,GAAU,GAFa,SAIT,OAAR2E,EAJiB,gCAKDvE,IAAM,CACtBC,OAAQ,OACRC,IAAKC,IAAUoF,oBACflF,QAAS,CACPC,MACEC,eAAeC,QAAQ,UACvBC,aAAaD,QAAQ,wBAEzBgF,OAAQ,CACN9D,KAAM4D,EAAOtB,SACbrC,MAAO2D,EAAO3D,MACdC,OAAQ0D,EAAOrB,QAhBA,OAmBU,MAdvBrD,EALa,QAmBX1B,KAAK2B,eACXjB,GAAU,GACVkB,IAAMC,QAAQH,EAAI1B,KAAK8B,iBAEvBzB,GAAc,IAvBG,UA0BT,QAARgF,EA1BiB,kCA2BDvE,IAAM,CACtBC,OAAQ,OACRC,IAAKC,IAAUoF,oBACflF,QAAS,CACPC,MACEC,eAAeC,QAAQ,UACvBC,aAAaD,QAAQ,wBAEzBgF,OAAQ,CACN9D,KAAM4D,EAAOtB,SACbrC,MAAO2D,EAAO3D,MACdC,OAAQ0D,EAAOrB,QAtCA,QAyCU,MAdvBrD,EA3Ba,QAyCX1B,KAAK2B,eACXjB,GAAU,GACVkB,IAAMC,QAAQH,EAAI1B,KAAK8B,iBAEvBzB,GAAc,IA7CG,0DAiDrBK,GAAU,GACVqB,QAAQC,IAAR,MAlDqB,0DAAH,sDAwEtB,OAlBAD,QAAQC,IAAI,oBAAkBhC,GAmB5B,kBAACuG,EAAA,EAAD,CAAOC,UAAW,EAAG7D,MAAO,CAACY,QAAQ,SACnC,kBAACT,EAAA,EAAD,CAAK2D,UAAU,iBACZnB,GACC,kBAACoB,EAAA,EAAD,CACEC,KAAMrB,EACNsB,YAjFe,WACvBrB,GAAe,MAmFX,kBAACzC,EAAA,EAAD,CAAK2D,UAAU,eAAe9D,MAAO,CAACI,QAAQ,OAAQ0B,WAAW,WAC/D,kBAACnB,EAAA,EAAD,CAAYE,QAAS,kBAAMnD,GAAc,IAAQsC,MAAO,CAACY,QAAQ,QAC/D,kBAACsD,EAAA,EAAD,OAFJ,WAIY,QAATxB,EACC,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,KAAKpE,MAAO,CAAEE,MAAO,YAAzC,YAIA,kBAACiE,EAAA,EAAD,CAAYC,QAAQ,KAAKpE,MAAO,CAAEE,MAAO,YAAzC,cAKJ,kBAACC,EAAA,EAAD,CAAKkE,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,OAEF,kBAAC,IAAD,CACEC,SAAU,SAACf,GAAD,OAAYD,EAAiBC,IACvCgB,cAAevC,EACfwC,iBAAkBrC,IAEjB,gBACCsC,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aAEAC,GALD,EAICC,aAJD,EAKCD,SACArB,EAND,EAMCA,OAND,EAOCuB,cAPD,OASC,kBAAC,IAAD,KACE,kBAAC3E,EAAA,EAAD,CAAMC,WAAS,EAAC2E,QAAS,GACvB,kBAAC5E,EAAA,EAAD,CAAMG,MAAI,EAAC0E,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAClF,EAAA,EAAD,KACE,2BAAOH,MAAO,CAACE,MAAM,oBAArB,aACA,kBAACC,EAAA,EAAD,CAAK2D,UAAU,WAAWO,GAAI,GAC5B,kBAACiB,EAAA,EAAD,CACEC,YAAY,kBACZnB,QAAQ,WACRoB,WAAS,EACT3F,KAAK,WACL4F,MAAOhC,EAAOtB,UAAY9E,EAAKwC,KAC/B6F,MAAOC,QAAQb,EAAQ3C,UAAYwC,EAAOxC,UAC1CyD,OAAQhB,EACRiB,SAAUhB,EACV1D,SAAkB,OAARuB,KAGd,kBAACoD,EAAA,EAAD,CACEJ,OAAK,EACL1F,MAAO,CAAEiC,OAAQ,MAAOnB,SAAU,SAEjCgE,EAAQ3C,UAAYwC,EAAOxC,YAIlC,kBAAC9B,EAAA,EAAD,CAAMG,MAAI,EAAC0E,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAClF,EAAA,EAAD,KACA,2BAAOH,MAAO,CAACE,MAAM,oBAArB,cACE,kBAACC,EAAA,EAAD,CAAK2D,UAAU,2BAA2BO,GAAI,GAC5C,kBAACiB,EAAA,EAAD,CACEC,YAAY,cACZnB,QAAQ,WACRoB,WAAS,EACT3F,KAAK,QACL6C,KAAK,SACLqD,WAAY,SAACC,GAEM,OAAV,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOxG,MACQ,OAAV,OAALwG,QAAK,IAALA,OAAA,EAAAA,EAAOxG,MACQ,OAAV,OAALwG,QAAK,IAALA,OAAA,EAAAA,EAAOxG,MAEPwG,EAAMC,kBAGVR,MAAOhC,EAAO3D,OAASzC,EAAKyC,MAC5B4F,MAAOC,QAAQb,EAAQhF,OAAS6E,EAAO7E,OACvC8F,OAAQhB,EACRiB,SAAUhB,EACV1D,SAAkB,OAARuB,KAGd,kBAACoD,EAAA,EAAD,CACEJ,OAAK,EACL1F,MAAO,CAAEiC,OAAQ,MAAOnB,SAAU,SAEjCgE,EAAQhF,OAAS6E,EAAO7E,SAK/B,kBAACO,EAAA,EAAD,CAAMG,MAAI,EAAC0E,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAClF,EAAA,EAAD,KACA,2BAAOH,MAAO,CAACE,MAAM,oBAArB,wBACE,kBAACC,EAAA,EAAD,CAAK2D,UAAU,2BAA2BO,GAAI,GAC5C,kBAACiB,EAAA,EAAD,CACEC,YAAY,aACZnB,QAAQ,WACRoB,WAAS,EACT3F,KAAK,OACL6C,KAAK,SACLqD,WAAY,SAACC,GAEM,OAAV,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOxG,MACQ,OAAV,OAALwG,QAAK,IAALA,OAAA,EAAAA,EAAOxG,MACQ,OAAV,OAALwG,QAAK,IAALA,OAAA,EAAAA,EAAOxG,MAEPwG,EAAMC,kBAGVR,MAAOhC,EAAOrB,MAAQ/E,EAAK0C,OAC3BoB,SAAkB,OAARuB,EACVgD,MAAOC,QAAQb,EAAQ1C,MAAQuC,EAAOvC,MACtCwD,OAAQhB,EACRiB,SAAUhB,KAGd,kBAACiB,EAAA,EAAD,CACEJ,OAAK,EACL1F,MAAO,CAAEiC,OAAQ,MAAOnB,SAAU,SAEjCgE,EAAQ1C,MAAQuC,EAAOvC,QAK9B,kBAAC/B,EAAA,EAAD,CAAMgF,GAAI,IACPvC,EACC,kBAAC3C,EAAA,EAAD,CAAK2D,UAAWvG,EAAQ+D,eACb,OAARoB,GACC,kBAACvC,EAAA,EAAD,KACE,kBAAC+F,EAAA,EAAD,CACExD,KAAK,SACL0B,QAAQ,YACRjD,SAAUrD,EACVoC,MAAM,WAJR,UAMUpC,GAAU,kBAACqI,EAAA,EAAD,SAM1B,kBAACD,EAAA,EAAD,CACE9B,QAAQ,YACRlE,MAAM,UACNsF,WAAS,EACT1B,UAAWvG,EAAQ6I,aAEnBvF,QAASyC,GANX,0BCtRpB,IAAMlC,EAAYC,aAAW,SAACrE,GAAD,YAAY,CACvCC,MAAI,GAEFoJ,WAAY,UACZC,UAAW,oCACXC,UAAW,aACX3F,QAAS,OACT4F,eAAgB,cAChBxE,aAAc,OACdN,OAAQ,yCARN,cASD1E,EAAMyJ,YAAYC,KAAK,MAAQ,CAC9B9F,QAAS,sBAVT,cAYF,OAAQ,CACNV,MAAO,UACPY,SAAU,SAdV,GAiBJ6F,UAAW,CACTvG,QAAS,OACTwG,eAAgB,gBAChB9E,WAAY,SACZ,OAAQ,CACN5B,MAAO,YAIX2G,QAAS,CACP5E,OAAQ,WACR,uBAAwB,CACtB6E,OAAQ,OACRlG,QAAS,UAGX,uBAAwB,CACtBkG,OAAQ,OACRlG,QAAS,eAKA,SAASmG,IACtB,IAAMxJ,EAAU6D,IAChB,EAA4DyB,cAE5D,GAFA,EAAQE,SAAR,EAAkBD,QAAlB,EAA2BG,QAA3B,EAAoCC,QAApC,EAA6CC,WAChCC,qBAAWC,KACIxF,oBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOmJ,EAAP,KAAmBvJ,EAAnB,KACA,EAAoCI,oBAAS,GAA7C,mBAAOoJ,EAAP,KAAmBvJ,EAAnB,KACA,EAAkCG,oBAAS,GAA3C,mBAAOqJ,EAAP,KAAkBC,EAAlB,KACA,EAAgCtJ,mBAAS,IAAzC,mBAAOuJ,EAAP,KAAiBC,EAAjB,KACA,EAAwCxJ,mBAAS,IAAjD,mBAAOyJ,EAAP,KAAqBC,EAArB,KACM/J,EAAc,uCAAG,WAAOgK,GAAP,eAAAtJ,EAAA,6DACrBkB,QAAQC,IAAImI,GADS,kBAIDrJ,IAAM,CACtBC,OAAQ,MACRC,IAAKC,IAAUmJ,qBACf9D,OAAQ,CACN9E,YAAa2I,EAAG1I,OARD,OAWU,MAPvBC,EAJa,QAWX1B,KAAK2B,eACXqI,EAAYtI,EAAI1B,KAAKqK,QACrBhK,GAAc,IAbG,gDAgBnB0B,QAAQC,IAAR,MAhBmB,yDAAH,sDAmBdsI,EAAS,uCAAG,4BAAAzJ,EAAA,+EAEIC,IAAM,CACtBC,OAAQ,MACRC,IAAKC,IAAUsJ,uBAJH,OAMe,MAJvB7I,EAFQ,QAMN1B,KAAK2B,eACXuI,EAAgBxI,EAAI1B,KAAKqK,QACzB3J,GAAU,IARE,gDAWdqB,QAAQC,IAAR,MACAtB,GAAU,GAZI,yDAAH,qDAmBf,OAJA8J,qBAAU,WACRF,MACC,IAGD,oCACE,kBAACxH,EAAA,EAAD,CAAK2D,UAAWvG,EAAQsJ,UAElBG,IAAeC,IAAeC,GAC9B,kBAAC/G,EAAA,EAAD,CAAK2D,UAAU,iBACb,kBAAC3D,EAAA,EAAD,CAAK2D,UAAWvG,EAAQoJ,UAAWrC,GAAI,GACrC,kBAACH,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACA,kBAAC8B,EAAA,EAAD,CACErF,QAAS,kBAAMsG,GAAa,IAC5B/C,QAAQ,YACRlE,MAAM,WAHR,aASF,kBAACC,EAAA,EAAD,CAAK2H,GAAI,EAAGC,GAAI,GACd,kBAACxD,EAAA,EAAD,OAGF,kBAACpE,EAAA,EAAD,CAAKkE,GAAI,GACP,kBAAC2D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOnE,UAAWvG,EAAQ2K,MAAOC,aAAW,gBAC1C,kBAACC,EAAA,EAAD,KACA,kBAACjL,EAAA,EAAD,CAAU6C,MAAO,CAAE9C,gBAAiB,oBAChC,kBAACuC,EAAA,EAAD,CAAWqE,UAAU,YAAYlE,MAAM,QAAvC,SAGA,kBAACH,EAAA,EAAD,CAAWqE,UAAU,aAArB,aACA,kBAACrE,EAAA,EAAD,CAAWqE,UAAU,YAAYlE,MAAM,QAAvC,SAGA,kBAACH,EAAA,EAAD,CAAWqE,UAAU,YAAYlE,MAAM,QAAvC,YAIA,kBAACH,EAAA,EAAD,CAAWqE,UAAU,YAAYlE,MAAM,QAAvC,UAIA,kBAACH,EAAA,EAAD,CAAWqE,UAAU,YAAYlE,MAAM,UAAvC,YAKJ,kBAACyI,EAAA,EAAD,KACGf,EAAagB,OAAS,GACrB,oCACGhB,GACCA,EAAaiB,KAAI,SAAClL,EAAMC,GAAP,OACf,kBAACF,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,MAAOA,EACPG,cAAe,SAAC+C,GAAD,OAAU/C,EAAc+C,IACvC9C,cAAe,SAAC8C,GAAD,OAAU9C,EAAc8C,IACvChD,eAAgB,SAACH,GAAD,OAAUG,EAAeH,IACzCM,YAAa,kBAAMgK,WAKZ,GAAhBL,IAAsBxJ,GACrB,+CAEe,GAAhBwJ,GAAqBxJ,GACpB,kBAACqI,EAAA,EAAD,YAWjBe,GACC,kBAACzE,EAAD,CACE/E,cAAe,SAACL,GAAD,OAAU8J,EAAa9J,IACtCqF,KAAK,MACLrF,KAAM,KAGT4J,GACC,kBAACxE,EAAD,CACE/E,cAAe,SAACL,GAAD,OAAUK,EAAcL,IACvCqF,KAAK,OACLrF,KAAM+J,IAGTJ,GACC,kBAACvE,EAAD,CACE/E,cAAe,SAACL,GAAD,OAAUI,EAAcJ,IACvCA,KAAM+J","file":"static/js/46.306edd1f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TableCell,\n  TableRow,\n  Avatar,\n  Grid,\n  Box,\n  makeStyles,\n  IconButton,\n  withStyles,\n} from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { FiCopy } from \"react-icons/fi\";\nimport { toast } from \"react-toastify\";\nimport { sortAddress } from \"src/utils\";\nimport { Cancel, Delete, Edit } from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport axios from \"axios\";\nimport ApiConfig from \"src/config/APICongig\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#e6e5e885\",\n    },\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#ffffff\",\n    },\n  },\n}))(TableRow);\n\nexport default function PlanData({\n  data,\n  classes,\n  index,\n  setIsOpenView,\n  setIsOpenEdit,\n  handleEditView,\n  handleLists,\n}) {\n  const history = useHistory();\n  const [idd1, setidd1] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loader, setLoader] = useState(false);\n  // const [tabview, setTabView] = useState(\"\");\n\n  const OpenModal = (id) => {\n    setidd1(id);\n    setOpen(true);\n  };\n\n  const handleDelete = async (deleteData) => {\n    try {\n      setLoader(true);\n      const res = await axios({\n        method: \"DELETE\",\n        url: ApiConfig.deleteSubscriptionPlan,\n        headers: {\n          token:\n            sessionStorage.getItem(\"token\") ||\n            localStorage.getItem(\"creatturAccessToken\"),\n        },\n        data: {\n          subscribeId: deleteData?._id,\n          // transactionHash: \"0xdhdfgjahg2j2gaDFjhgjfg4ajfgdsgsdF7\",\n        },\n      });\n      if (res.data.responseCode == 200) {\n        // setPlanDataList(res.data.result);\n        toast.success(res.data.responseMessage);\n        handleLists();\n        setLoader(false);\n      }\n    } catch (error) {\n      setLoader(false);\n      console.log(error);\n      if (error.response) {\n        toast.success(error.response.data.responseMessage);\n      } else {\n        toast.success(error.message);\n      }\n    }\n  };\n\n  return (\n    <>\n      {/* {tabview === \"farmerview\" ? (\n        <ViewFarmerData />\n      ) : ( */}\n      <StyledTableRow key={data._id}>\n        <TableCell component=\"th\" scope=\"row\">\n          {index + 1}\n        </TableCell>\n        <TableCell align=\"left\">{data.name ? data.name : \"N/A\"}</TableCell>\n\n        <TableCell align=\"left\">{data?.price}</TableCell>\n        <TableCell align=\"left\">{data?.months}</TableCell>\n\n        <TableCell\n          align=\"left\"\n          style={data.status == \"BLOCK\" ? { color: \"red\" } : {}}\n        >\n          {data.status == \"BLOCK\" ? \"Blocked\" : \"Active\"}\n        </TableCell>\n\n        <TableCell align=\"left\">\n          <Box display=\"flex\">\n            <Grid container justify=\"center\">\n              <Box item display=\"flex\">\n                <Tooltip title=\"View plan details\">\n                  <IconButton style={{ padding: \"6px 12px\" }}>\n                    <VisibilityIcon\n                      onClick={() => handleEditView(data)}\n                      style={{\n                        fontSize: \"25px\",\n                        cursor: \"pointer\",\n                        marginRight: \"5px\",\n                      }}\n                    />\n                  </IconButton>\n                </Tooltip>\n                {!data.isDelete ? (\n                  <Tooltip title=\"Delete plan details\">\n                    <IconButton style={{ padding: \"6px 12px\" }}>\n                      <Delete\n                        // onClick={() => handleEditView(data)}\n                        onClick={() => handleDelete(data)}\n                        style={{\n                          fontSize: \"25px\",\n                          cursor: \"pointer\",\n                          marginRight: \"5px\",\n                        }}\n                        disabled={loader}\n                      />\n                    </IconButton>\n                  </Tooltip>\n                ) : (\n                  <Tooltip title=\"Plan Deleted\">\n                    <IconButton style={{ padding: \"6px 12px\" }}>\n                      <Delete\n                        // onClick={() => handleEditView(data)}\n                        // onClick={() => handleDelete(data)}\n                        style={{\n                          fontSize: \"25px\",\n                          cursor: \"none\",\n                          marginRight: \"5px\",\n                          color: \"red\",\n                        }}\n                        disabled={loader}\n                      />\n                    </IconButton>\n                  </Tooltip>\n                )}\n              </Box>\n            </Grid>\n          </Box>\n        </TableCell>\n      </StyledTableRow>\n      {/* )} */}\n    </>\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  makeStyles,\n  TextField,\n  Typography,\n  FormHelperText,\n  Select,\n  MenuItem,\n  Paper,\n} from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport { AiFillCamera } from \"react-icons/ai\";\nimport React, { useState, useContext } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport ApiConfig from \"src/config/APICongig\";\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\nimport { toast } from \"react-toastify\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { UserContext } from \"src/context/User\";\nimport WalletConnectModal from \"src/component/ConnectWallet/WalletConnectModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatorSection: {\n    \"paddingLeft\": \"14px\",\n    \"marginBottom\": \"10px\",\n  },\n  childSection: {\n    position: \"relative\",\n  },\n  iconBtn: {\n    border: \"1px solid #222\",\n    position: \"absolute\",\n    right: \"-17px\",\n    top: \"57%\",\n    padding: \"12px 12px 7px !important\",\n  },\n  template: {\n    display: \" flex\",\n    alignItems: \"center\",\n    border: \"1px solid #b8bcb7\",\n    width: \"fit-content\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n    margin: \" 10px 6px\",\n  },\n}));\nconst formInitialSchema = {\n  planname: \"\",\n  price: \"\",\n  time: \"\",\n};\nconst formValidationSchema = yup.object().shape({\n  planname: yup.string().required(\"Plan name is required\"),\n  price: yup.string().required(\"Plan price is required\"),\n  time: yup.string().required(\"Duration is required\"),\n});\n\nexport default function AddPlan({ setIsOpenEdit, type, data }) {\n  const classes = useStyles();\n  const [openWallect, setOpenWallect] = useState(false);\n  const { activate, account, chainId, library, deactivate } = useWeb3React();\n  const user = useContext(UserContext); // onClick={user.connectWallet}\n  const [cropImage, setCropImage] = useState(\"\");\n  const [cropImageUrl, setCropImageUrl] = useState(\"\");\n  const [loader, setLoader] = useState(\"\");\n\n  const HandleWalletModal = () => {\n    setOpenWallect(true);\n    user.connectWallet();\n  };\n  const CloseWalletModal = () => {\n    setOpenWallect(false);\n  };\n  const handleFormSubmit = async (values) => {\n    console.log(\"values----\", values);\n    setLoader(true);\n    try {\n      if (type == \"add\") {\n        const res = await axios({\n          method: \"post\",\n          url: ApiConfig.addSubscriptionPlan,\n          headers: {\n            token:\n              sessionStorage.getItem(\"token\") ||\n              localStorage.getItem(\"creatturAccessToken\"),\n          },\n          params: {\n            name: values.planname,\n            price: values.price,\n            months: values.time,\n          },\n        });\n        if (res.data.responseCode == 200) {\n          setLoader(false);\n          toast.success(res.data.responseMessage);\n          // setPlanDataList(res.data.result);\n          setIsOpenEdit(false);\n        }\n      }\n      if (type == \"edit\") {\n        const res = await axios({\n          method: \"post\",\n          url: ApiConfig.addSubscriptionPlan,\n          headers: {\n            token:\n              sessionStorage.getItem(\"token\") ||\n              localStorage.getItem(\"creatturAccessToken\"),\n          },\n          params: {\n            name: values.planname,\n            price: values.price,\n            months: values.time,\n          },\n        });\n        if (res.data.responseCode == 200) {\n          setLoader(false);\n          toast.success(res.data.responseMessage);\n          // setPlanDataList(res.data.result);\n          setIsOpenEdit(false);\n        }\n      }\n    } catch (error) {\n      setLoader(false);\n      console.log(error);\n    }\n  };\n\n  console.log(\"viewData----->\", data);\n  //   const ViewSubscriptionPlan = async () => {\n  //     try {\n  //       const res = await axios({\n  //         method: \"get\",\n  //         url: ApiConfig.viewSubscriptionPlan,\n  //       });\n  //       if (res.data.responseCode == 200) {\n  //         setPlanDataList(res.data.result);\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   useEffect(() => {\n  //     ViewSubscriptionPlan();\n  //   }, []);\n\n  return (\n    <Paper elevation={1} style={{padding:\"20px\"}}>\n      <Box className=\"mainContainer\">\n        {openWallect && (\n          <WalletConnectModal\n            open={openWallect}\n            handleClose={CloseWalletModal}\n          />\n        )}\n        <Box className=\"arrowSection\" style={{display:\"flex\", alignItems:\"center\"}}>\n          <IconButton onClick={() => setIsOpenEdit(false)} style={{padding:\"0px\"}}>\n            <ArrowBack />\n          </IconButton>&nbsp;&nbsp;\n          {type === \"add\" ? (\n            <Typography variant=\"h4\" style={{ color: \"#0c0d31\" }}>\n              Add Plan\n            </Typography>\n          ) : (\n            <Typography variant=\"h4\" style={{ color: \"#0c0d31\" }}>\n              View Plan\n            </Typography>\n          )}\n        </Box>\n        <Box mt={1} mb={3}>\n          <Divider />\n        </Box>\n        <Formik\n          onSubmit={(values) => handleFormSubmit(values)}\n          initialValues={formInitialSchema}\n          validationSchema={formValidationSchema}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            touched,\n            values,\n            setFieldValue,\n          }) => (\n            <Form>\n              <Grid container spacing={3}>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <Box>\n                    <label style={{color:\"rgb(12, 13, 49)\"}}>Plan Name</label>\n                    <Box className=\"labelAll\" mt={1}>\n                      <TextField\n                        placeholder=\"Enter plan name\"\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"planname\"\n                        value={values.planname || data.name}\n                        error={Boolean(touched.planname && errors.planname)}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        disabled={type != \"add\"}\n                      />\n                    </Box>\n                    <FormHelperText\n                      error\n                      style={{ margin: \"0px\", fontSize: \"12px\" }}\n                    >\n                      {touched.planname && errors.planname}\n                    </FormHelperText>\n                  </Box>\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <Box>\n                  <label style={{color:\"rgb(12, 13, 49)\"}}>Plan Price</label>\n                    <Box className=\"labelAll numberTextField\" mt={1}>\n                      <TextField\n                        placeholder=\"Enter price\"\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"price\"\n                        type=\"number\"\n                        onKeyPress={(event) => {\n                          if (\n                            event?.key === \"-\" ||\n                            event?.key === \"+\" ||\n                            event?.key === \"=\"\n                          ) {\n                            event.preventDefault();\n                          }\n                        }}\n                        value={values.price || data.price}\n                        error={Boolean(touched.price && errors.price)}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        disabled={type != \"add\"}\n                      />\n                    </Box>\n                    <FormHelperText\n                      error\n                      style={{ margin: \"0px\", fontSize: \"12px\" }}\n                    >\n                      {touched.price && errors.price}\n                    </FormHelperText>\n                  </Box>\n                </Grid>\n\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <Box>\n                  <label style={{color:\"rgb(12, 13, 49)\"}}>Duration (in months)</label>\n                    <Box className=\"labelAll numberTextField\" mt={1}>\n                      <TextField\n                        placeholder=\"Enter time\"\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"time\"\n                        type=\"number\"\n                        onKeyPress={(event) => {\n                          if (\n                            event?.key === \"-\" ||\n                            event?.key === \"+\" ||\n                            event?.key === \"=\"\n                          ) {\n                            event.preventDefault();\n                          }\n                        }}\n                        value={values.time || data.months}\n                        disabled={type != \"add\"}\n                        error={Boolean(touched.time && errors.time)}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                      />\n                    </Box>\n                    <FormHelperText\n                      error\n                      style={{ margin: \"0px\", fontSize: \"12px\" }}\n                    >\n                      {touched.time && errors.time}\n                    </FormHelperText>\n                  </Box>\n                </Grid>\n\n                <Grid xs={12}>\n                  {account ? (\n                    <Box className={classes.avatorSection}>\n                      {type == \"add\" && (\n                        <Box>\n                          <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            disabled={loader}\n                            color=\"primary\"\n                          >\n                            Update {loader && <ButtonCircularProgress />}\n                          </Button>\n                        </Box>\n                      )}\n                    </Box>\n                  ) : (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      className={classes.connetwallet}\n                      // onClick={user.connectWallet}\n                      onClick={HandleWalletModal}\n                    >\n                      Connect Wallet\n                    </Button>\n                  )}\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Paper>\n  );\n}\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Container,\n  makeStyles,\n  Typography,\n  Divider,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { GiFarmer } from \"react-icons/gi\";\nimport { MdPendingActions } from \"react-icons/md\";\nimport { SiStatuspal } from \"react-icons/si\";\nimport PlanData from \"./PlanData\";\nimport AddPlan from \"./AddPlan\";\nimport axios from \"axios\";\nimport ApiConfig from \"src/config/APICongig\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { UserContext } from \"src/context/User\";\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: 20px 25px 40px;\n    background: \"#191c24\",\n    boxShadow: \"0 8px 32px 0 rgb(31 38 135 / 37%)\",\n    boxSizing: \"border-box\",\n    padding: \"20px\",\n    backdropFilter: \"blur(5.5px)\",\n    borderRadius: \"10px\",\n    border: \"1px solid rgba( 255, 255, 255, 0.18 )\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"0px 20px 0px 20px\",\n    },\n    \"& h4\": {\n      color: \"#14133b\",\n      fontSize: \"22px\",\n    },\n  },\n  addFarner: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    \"& h4\": {\n      color: \"#14133b\",\n      // fontSize: \"22px\",\n    },\n  },\n  mainBox: {\n    margin: \"50px 0px\",\n    \"& .MuiTableCell-root\": {\n      height: \"40px\",\n      padding: \"0 10px\",\n    },\n\n    \"& .MuiTableCell-body\": {\n      height: \"56px\",\n      padding: \"0 10px\",\n    },\n  },\n}));\n\nexport default function PlanList() {\n  const classes = useStyles();\n  const { activate, account, chainId, library, deactivate } = useWeb3React();\n  const user = useContext(UserContext);\n  const [loader, setLoader] = useState(true);\n  const [isOpenView, setIsOpenView] = useState(false);\n  const [isOpenEdit, setIsOpenEdit] = useState(false);\n  const [isOpenAdd, setIsOpenAdd] = useState(false);\n  const [viewPlan, setViewPlan] = useState(\"\");\n  const [planDataList, setPlanDataList] = useState([]);\n  const handleEditView = async (id) => {\n    console.log(id);\n    // setViewPlan()\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: ApiConfig.viewSubscriptionPlan,\n        params: {\n          subscribeId: id._id,\n        },\n      });\n      if (res.data.responseCode == 200) {\n        setViewPlan(res.data.result);\n        setIsOpenEdit(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const PlansList = async () => {\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: ApiConfig.listSubscriptionPlan,\n      });\n      if (res.data.responseCode == 200) {\n        setPlanDataList(res.data.result);\n        setLoader(false);\n      }\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n    }\n  };\n  useEffect(() => {\n    PlansList();\n  }, []);\n\n  return (\n    <>\n      <Box className={classes.mainBox}>\n\n          {!isOpenView && !isOpenEdit && !isOpenAdd && (\n            <Box className=\"mainContainer\">\n              <Box className={classes.addFarner} mb={2}>\n                <Typography variant=\"h4\">Plan Mangement</Typography>\n                <Button\n                  onClick={() => setIsOpenAdd(true)}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Add Plan\n                </Button>\n              </Box>\n\n              <Box pt={2} pb={2}>\n                <Divider />\n              </Box>\n\n              <Box mt={2}>\n                <TableContainer >\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                    <TableRow style={{ backgroundColor: \"rgb(8, 86, 204)\" }}>\n                        <TableCell className=\"tableCell\" align=\"left\">\n                          Sr.No\n                        </TableCell>\n                        <TableCell className=\"tableCell\">Plan Name</TableCell>\n                        <TableCell className=\"tableCell\" align=\"left\">\n                          Price\n                        </TableCell>\n                        <TableCell className=\"tableCell\" align=\"left\">\n                          Duration\n                        </TableCell>\n\n                        <TableCell className=\"tableCell\" align=\"left\">\n                          Status\n                        </TableCell>\n\n                        <TableCell className=\"tableCell\" align=\"center\">\n                          Action\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {planDataList.length > 0 && (\n                        <>\n                          {planDataList &&\n                            planDataList.map((data, index) => (\n                              <PlanData\n                                data={data}\n                                classes={classes}\n                                index={index}\n                                setIsOpenView={(item) => setIsOpenView(item)}\n                                setIsOpenEdit={(item) => setIsOpenEdit(item)}\n                                handleEditView={(data) => handleEditView(data)}\n                                handleLists={() => PlansList()}\n                              />\n                            ))}\n                        </>\n                      )}\n                      {planDataList == 0 && !loader && (\n                        <span>No Data Found</span>\n                      )}\n                      {planDataList == 0 && loader && (\n                        <ButtonCircularProgress />\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n            </Box>\n          )}\n\n      </Box>\n\n      {isOpenAdd && (\n        <AddPlan\n          setIsOpenEdit={(data) => setIsOpenAdd(data)}\n          type=\"add\"\n          data={\"\"}\n        />\n      )}\n      {isOpenEdit && (\n        <AddPlan\n          setIsOpenEdit={(data) => setIsOpenEdit(data)}\n          type=\"edit\"\n          data={viewPlan}\n        />\n      )}\n      {isOpenView && (\n        <AddPlan\n          setIsOpenEdit={(data) => setIsOpenView(data)}\n          data={viewPlan}\n        />\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}