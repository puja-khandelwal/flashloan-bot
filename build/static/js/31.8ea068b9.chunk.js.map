{"version":3,"sources":["component/Page.js","views/pages/Transactions/Transaction.js"],"names":["Page","props","title","children","tabledata","transactionHash","toToken","fromSwap","useStyles","makeStyles","theme","mainBox","margin","height","padding","marginTop","color","fontSize","fontWeight","marginBottom","display","flexWrap","justifyContent","width","textAlign","maxWidth","minWidth","paddingRight","paddingLeft","background","border","buttonright","root","backgroundColor","dialogbox","position","icon","top","right","cursor","action","tableBaseContent","alignItems","borderRadius","filterBtn","boxShadow","boxSizing","lineHeight","headerCellcontent","flexDirection","textBox","palette","primary","main","datepicker","Transaction","classes","location","useHistory","useLocation","React","useState","selectedCategoryNames","swapExchange","timeFilter","setTimeFilter","toTimeFilter","setToTimeFilter","executionsList","setexecutionsList","page","setPage","setexecutionsList1","useWeb3React","account","activate","user","chainId","library","deactivate","useContext","UserContext","useEffect","searchParams","URLSearchParams","window","search","has","param","get","ofsetTop","document","getElementById","offsetTop","console","log","Scroll","animateScroll","scrollTo","pathname","buyTokenHandler","a","axios","method","url","ApiConfig","buyTokenList","headers","token","sessionStorage","getItem","localStorage","data","name","fromDate","toDate","swap","toString","limit","res","responseCode","result","docs","isLogin","Date","age","setAge","handleChange","event","target","value","menuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","elevation","PaperProps","style","maxHeight","className","mb","variant","container","spacing","item","xs","md","lg","sm","align","mt","fullWidth","formControl","placeholder","type","labelId","id","onChange","MenuProps","date","format","inputVariant","disableFuture","helperText","minDate","onClick","map","index","component","scope","src","createdAt","price","pages","count","siblingCount","showFirstButton","showLastButton","e","v","size"],"mappings":"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","file":"static/js/31.8ea068b9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nexport default function Page(props) {\n  const { title, children } = props;\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div>{children}</div>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Box,\n  Typography,\n  Container,\n  makeStyles,\n  Button,\n  Grid,\n  Menu,\n  MenuItem,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TableContainer,\n  Paper,\n  FormControl,\n  Select,\n  TextField,\n  Avatar,\n} from \"@material-ui/core\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { CategoryButtons, exploreData, RankingButtons } from \"src/constants\";\nimport Page from \"src/component/Page\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Scroll from \"react-scroll\";\nimport axios from \"axios\";\nimport ApiConfig from \"src/config/APICongig\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { UserContext } from \"src/context/User\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { sortAddress } from \"src/utils\";\nimport moment from \"moment\";\nimport * as XLSX from \"xlsx\";\n\nconst tabledata = [\n  {\n    transactionHash: \"0x000000012\",\n    toToken: \"ETH\",\n    fromSwap: \"23.3700000\",\n    fromSwap: \"Uniswap\",\n    createdAt: \"04/07/2211:32\",\n    price: \"$150 / 13.3%\",\n  },\n  {\n    transactionHash: \"0x000000012\",\n    toToken: \"ETH\",\n    fromSwap: \"23.3700000\",\n    fromSwap: \"Uniswap\",\n    createdAt: \"04/07/2211:32\",\n    price: \"$150 / 13.3%\",\n  },\n  {\n    transactionHash: \"0x000000012\",\n    toToken: \"ETH\",\n    fromSwap: \"23.3700000\",\n    fromSwap: \"Uniswap\",\n    createdAt: \"04/07/2211:32\",\n    price: \"$150 / 13.3%\",\n  },\n  {\n    transactionHash: \"0x000000012\",\n    toToken: \"ETH\",\n    fromSwap: \"23.3700000\",\n    fromSwap: \"Uniswap\",\n    createdAt: \"04/07/2211:32\",\n    price: \"$150 / 13.3%\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  mainBox: {\n    margin: \"16px 0px 50px\",\n    \"& .MuiTableCell-root\": {\n      height: \"56px\",\n      padding: \"0 10px\",\n    },\n    \"& .MuiFormControl-marginDense\": {\n      marginTop: \"0px\",\n    },\n    \"& h2\": {\n      color: \"rgb(12, 13, 49)\",\n      fontSize: \"33px\",\n      fontWeight: \"500\",\n      marginBottom: \"20px\",\n    },\n    \"& .dFlex\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      \"& .padLR\": { padding: \"0px 5px\" },\n      \"& .padLR1\": { padding: \"0px 0px 0px 10px\" },\n\n      \"& .Alingend\": {\n        \"& .MuiButton-containedPrimary\": {\n          padding: \"10px 23px !important\",\n        },\n      },\n      \"@media(min-width:1441px)\": {\n        \"& .Alingend\": {\n          width: \"100%\",\n          textAlign: \"end\",\n          maxWidth: \"147px\",\n          minWidth: \"118px\",\n          paddingRight: \"0px\",\n          paddingLeft: \"18px\",\n        },\n      },\n      \"& h2\": { fontSize: \"24px\" },\n    },\n\n    \"& .MuiTableCell-body\": {\n      height: \"56px\",\n      padding: \"0 10px\",\n    },\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      height: \"50px\",\n      padding: \"19px 4px\",\n      background: \"transparent\",\n      border: \"1px solid #808080bf\",\n    },\n    \"& .MuiIconButton-root\": {\n      color: \"#14133bbf !important\",\n    },\n    \"& .MuiInputAdornment-positionEnd\": { margin: \"0\" },\n    \"& .MuiOutlinedInput-inputAdornedEnd\": {\n      // display: \"none\",\n    },\n  },\n  width: {\n    margin: \"24px\",\n    paddingLeft: \"9px\",\n  },\n  buttonright: {\n    marginTop: \"25px\",\n    padding: \"22px\",\n  },\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#ffffff\",\n    },\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#ffffff\",\n    },\n  },\n  dialogbox: {\n    position: \"relative\",\n  },\n  icon: {\n    color: \"white\",\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"10px\",\n    \"&:hover\": {\n      cursor: \"Pointer\",\n    },\n  },\n  action: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  tableBaseContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#190a2c\",\n    borderRadius: \"0px 0px 5px 5px\",\n  },\n  filterBtn: {\n    border: \"1px solid #E7E7E7\",\n    margin: \"4px 0px\",\n    fontSize: \"14px\",\n    // background: \"#213743\",\n    justifyContent: \"space-between\",\n    height: \"44px\",\n    color: \"#14133b\",\n    backgroundColor: \"#ffff\",\n    boxShadow: \"none\",\n    boxSizing: \"border-box\",\n    fontWeight: \"500\",\n    lineHeight: \"20px\",\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // color: theme.palette.primary.main\n      color: \"#14133b\",\n    },\n  },\n  headerCellcontent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"inherit\",\n    \"& div\": {\n      position: \"relative\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      \"& svg\": {\n        // position:\"absolute\",\n        // top:\"10px\"\n      },\n    },\n  },\n  textBox: {\n    \"& h2\": {\n      color: theme.palette.primary.main,\n      lineHeight: \"140%\",\n      fontSize: \"24px\",\n    },\n  },\n  datepicker: {\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction Transaction(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\n  const [recentCol, setRecentCol] = React.useState(null);\n  const [selectedCategoryNames, setSelectedCategoryNames] = useState();\n  const [swapExchange, setswapExchange] = useState();\n  const [timeFilter, setTimeFilter] = useState();\n  const [toTimeFilter, setToTimeFilter] = useState();\n  const [executionsList, setexecutionsList] = useState();\n  const [page, setPage] = useState(1);\n  const [executionsList1, setexecutionsList1] = useState([]);\n  const { activate, account, chainId, library, deactivate } = useWeb3React();\n  const user = useContext(UserContext);\n  const [selectRankingDays, setSelectRankingDays] = useState();\n  useEffect(() => {\n    let searchParams = new URLSearchParams(window.location.search);\n    if (searchParams.has(\"id\")) {\n      let param = searchParams.get(\"id\");\n      const getdiv = document.getElementById(param);\n      const ofsetTop = getdiv.offsetTop - 30;\n      console.log(ofsetTop);\n      var scroll = Scroll.animateScroll;\n      scroll.scrollTo(ofsetTop, param);\n    }\n  }, [location.pathname]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  const buyTokenHandler = async () => {\n    console.log(\"<<<<<<<<<<<<<-------------->>>>>>>>>>>>>>>>>>\");\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: ApiConfig.buyTokenList,\n        headers: {\n          token:\n            sessionStorage.getItem(\"token\") ||\n            localStorage.getItem(\"creatturAccessToken\"),\n        },\n        data: {\n          search: selectedCategoryNames && selectedCategoryNames.name,\n          fromDate: timeFilter,\n          toDate: toTimeFilter,\n          swap: swapExchange,\n          page: page.toString(),\n          limit: \"10\",\n        },\n      });\n      if (res.data.responseCode == 200) {\n        setexecutionsList(res.data.result);\n        setexecutionsList1(res.data.result.docs);\n        // console.log(\"total-----results:----\", res.data.result.docs);\n      }\n    } catch (error) {\n      console.log(error);\n      setexecutionsList1([]);\n    }\n  };\n  useEffect(() => {\n    if (account && user.isLogin) {\n      buyTokenHandler();\n    }\n  }, [account, user.isLogin, page]);\n\n  const downloadExcel = () => {\n    const workSheet = XLSX.utils.json_to_sheet(executionsList1);\n    const workBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"userList\");\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\n    XLSX.writeFile(workBook, \"Transaction_History.xlsx\");\n  };\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date(\"2014-08-18T21:11:54\")\n  );\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  const [age, setAge] = React.useState(10);\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  const menuProps = {\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\",\n    },\n    elevation: 0,\n    PaperProps: {\n      style: {\n        top: \"0px !important\",\n        maxHeight: 250,\n      },\n    },\n  };\n  return (\n    <Page title=\"Transaction\">\n      <Box className={classes.mainBox}>\n        {/* <Filterswap /> */}\n        <Paper elevation={2} style={{ padding: \"20px\" }}>\n          <Box mb={2}>\n            <Typography variant=\"h2\" style={{ color: \"#0c0d31\" }}>\n              Transactions History\n            </Typography>{\" \"}\n          </Box>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs={12} md={3} lg={2} sm={6} align=\"left\">\n              <Typography\n                variant=\"boay2\"\n                style={{ color: \"rgba(61, 61, 61, 1)\" }}\n              >\n                {\" \"}\n                Search\n              </Typography>\n              <Box className=\"transactionfilter\" mt={1}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <TextField\n                    name=\"name\"\n                    placeholder=\"Search by Coin Name/ tra....\"\n                    variant=\"outlined\"\n                    type=\"search\"\n                  />\n                </FormControl>\n              </Box>\n            </Grid>\n\n            <Grid item xs={12} md={3} lg={2} sm={6} align=\"left\">\n              <Typography\n                variant=\"boay2\"\n                style={{ color: \"rgba(61, 61, 61, 1)\" }}\n              >\n                {\" \"}\n                Select Exchange\n              </Typography>\n              <Box className=\"transactionfilter\" mt={1}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                    fullWidth\n                    MenuProps={menuProps}\n                  >\n                    <MenuItem value={10}>Select Exchange</MenuItem>\n                    <MenuItem value={20}>Blocked</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={2} sm={6} align=\"left\">\n              <Typography\n                variant=\"boay2\"\n                style={{ color: \"rgba(61, 61, 61, 1)\" }}\n              >\n                {\" \"}\n                Select Coin\n              </Typography>\n              <Box className=\"transactionfilter\" mt={1}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                    fullWidth\n                    MenuProps={menuProps}\n                  >\n                    <MenuItem value={10}> Select Coin</MenuItem>\n                    <MenuItem value={20}>BTC</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={2} sm={6} align=\"left\">\n              <Typography\n                variant=\"boay2\"\n                style={{ color: \"rgba(61, 61, 61, 1)\" }}\n              >\n                From Date:\n              </Typography>\n              <Box mt={1}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <KeyboardDatePicker\n                    value={timeFilter}\n                    onChange={(date) => {\n                      setTimeFilter(new Date(date));\n                    }}\n                    format=\"DD/MM/YYYY\"\n                    inputVariant=\"outlined\"\n                    disableFuture={true}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    helperText=\"\"\n                    name=\"dob\"\n                    fullWidth\n                  />\n                </FormControl>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={2} sm={6} align=\"left\">\n              <Typography\n                variant=\"boay2\"\n                style={{ color: \"rgba(61, 61, 61, 1)\" }}\n              >\n                To Date:\n              </Typography>\n              <Box mt={1}>\n                <KeyboardDatePicker\n                  variant=\"outlined\"\n                  value={toTimeFilter}\n                  onChange={(date) => {\n                    setToTimeFilter(new Date(date));\n                  }}\n                  minDate={timeFilter}\n                  format=\"DD/MM/YYYY\"\n                  inputVariant=\"outlined\"\n                  disableFuture={true}\n                  margin=\"dense\"\n                  helperText=\"\"\n                  name=\"dob\"\n                  fullWidth\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={2} sm={6}>\n              <Typography variant=\"boay2\" style={{ color: \"#fff\" }}>\n                To Date:\n              </Typography>\n              <Box className=\"displayEnd\" mt={1}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={buyTokenHandler}\n                >\n                  Apply\n                </Button>{\" \"}\n                &nbsp;\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className=\"clearbutton\"\n                  onClick={buyTokenHandler}\n                >\n                  Clear\n                </Button>{\" \"}\n              </Box>\n            </Grid>\n            {/* <Grid item xs={12} md={4} lg={4} sm={6} align=\"left\">\n              <Typography variant=\"boay2\" style={{ color: \"#fff\" }}>\n                {\" \"}\n                Select Coin\n              </Typography>\n              <Box mt={1}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={buyTokenHandler}\n                >\n                  Search\n                </Button>{\" \"}\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  // onClick={downloadExcel}\n                  style={{\n                    background: \"#179366\",\n                    color: \"#fff\",\n                    border: \"none\",\n                  }}\n                >\n                  Reset\n                </Button>{\" \"}\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={downloadExcel}\n                  style={{\n                    background: \"#FD985F\",\n                    color: \"#fff\",\n                    border: \"none\",\n                  }}\n                >\n                  Export\n                </Button>\n              </Box>\n            </Grid> */}\n          </Grid>\n\n          {/* <Grid container spacing={1}>\n              <Grid item xs={6} align=\"left\">\n                <Box className={classes.textBox}>\n                  <Typography variant=\"h2\">Transactions History</Typography>{\" \"}\n                </Box>\n              </Grid>\n              <Grid item xs={6} align=\"right\">\n              <Box>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={downloadExcel}\n                  >\n                    Export\n                  </Button>\n                </Box> \n              </Grid>\n            </Grid> */}\n        </Paper>\n\n        <Box mt={3}>\n          <Paper elevation={2} style={{ padding: \"20px\" }}>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow style={{ backgroundColor: \"rgba(65, 22, 67, 1)\" }}>\n                    <TableCell align=\"left\">\n                      <Typography\n                        variant=\"body2\"\n                        className={classes.headerCellcontent}\n                      >\n                        Tx Hash\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <Typography\n                        variant=\"body2\"\n                        className={classes.headerCellcontent}\n                      >\n                        Coin Name\n                      </Typography>\n                    </TableCell>\n                    <TableCell>Exchange A</TableCell>\n                    <TableCell>Exchange B</TableCell>\n                    <TableCell align=\"left\">\n                      <Typography\n                        variant=\"body2\"\n                        className={classes.headerCellcontent}\n                      >\n                        Price Difference\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <Typography\n                        variant=\"body2\"\n                        className={classes.headerCellcontent}\n                      >\n                        Date/Time\n                      </Typography>{\" \"}\n                    </TableCell>\n\n                    <TableCell align=\"left\">\n                      <Typography\n                        variant=\"body2\"\n                        className={classes.headerCellcontent}\n                      >\n                        Profit\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {tabledata &&\n                    tabledata?.map((data, index) => {\n                      return (\n                        <TableRow className={classes.root}>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {/* {data?.transactionHash == 0\n                            ? 0\n                            : sortAddress(data?.transactionHash)} */}\n                            {data.transactionHash}\n                          </TableCell>\n                          <TableCell>\n                            {/* {`${data?.fromToken} - ${data?.toToken}`} */}\n                            {/* {data.toToken} */}\n                            <Box className=\"displayStart\">\n                              <Avatar\n                                src=\"/images/bnb_icon.svg\"\n                                width=\"30px\"\n                                height=\"30px\"\n                              />\n                              &nbsp;\n                              <Typography\n                                variant=\"h6\"\n                                style={{ color: \"rgba(61, 61, 61, 1)\" }}\n                              >\n                                BTC\n                              </Typography>\n                              &nbsp; Bitcoin\n                            </Box>\n                          </TableCell>\n                          <TableCell>{data?.fromSwap}</TableCell>\n                          <TableCell>{data?.fromSwap}</TableCell>\n\n                          <TableCell style={{ color: \"rgba(243, 109, 54, 1)\" }}>\n                            {/* {data?.PriceDifference} */}0\n                          </TableCell>\n                          <TableCell>\n                            {/* {moment(data?.createdAt).format(\"lll\")} */}\n                            {data?.createdAt}\n                          </TableCell>\n                          <TableCell style={{ color: \"rgba(243, 109, 54, 1)\" }}>\n                            {\" \"}\n                            {data?.price}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n\n                  {/* {executionsList1.length == 0 && (\n                  <Box align=\"center\" className=\"moreBox1\">\n                    <Typography variant=\"body2\">No Execution Founds</Typography>\n                  </Box>\n                )} */}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            {executionsList?.pages > 1 && (\n              <Box align=\"right\" mt={3} className={classes.page}>\n                <Pagination\n                  count={executionsList?.pages}\n                  siblingCount={0}\n                  showFirstButton\n                  showLastButton\n                  page={page}\n                  onChange={(e, v) => setPage(v)}\n                />\n                {/* <Button\n              className={classes.filterBtn}\n              onClick={(event) => setRecentCol(event.currentTarget)}\n            >\n              {swapExchange ? swapExchange.name.toString() : \"10\"}\n              <ArrowDropDownIcon />\n            </Button> */}\n              </Box>\n            )}\n\n            <Box align=\"right\" mt={3} className={classes.page}>\n              <Pagination count={5} size=\"small\" />\n            </Box>\n          </Paper>\n        </Box>\n      </Box>\n    </Page>\n  );\n}\n\nexport default Transaction;\n"],"sourceRoot":""}