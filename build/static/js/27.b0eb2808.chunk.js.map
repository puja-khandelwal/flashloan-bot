{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/pages/Auth/Login/Index.js"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","useStyles","makeStyles","loginmainrSection","overflowY","marginTop","fontWeight","paddingRight","maxWidth","maxHeight","breakpoints","down","marginLeft","Login","history","useHistory","useState","showPassword","setShowPassword","isUpdating","setIsUpdating","user","useContext","UserContext","rememberMe","window","localStorage","getItem","isRemember","setIsRemember","RememberData","JSON","parse","initialValues","email","password","formValidationSchema","yep","shape","max","trim","min","handleFormSubmit","values","a","postAPIHandler","endPoint","dataToSend","response","data","responseCode","toast","success","responseMessage","sessionStorage","setItem","result","token","stringify","removeItem","userLogIn","push","error","elevation","align","variant","mt","style","onClick","validationSchema","onSubmit","errors","handleBlur","handleChange","touched","handleSubmit","setFieldValue","fullWidth","placeholder","InputProps","endAdornment","edge","my","e","mb"],"mappings":"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","file":"static/js/27.b0eb2808.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  Paper,\n  TextField,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport * as yep from \"yup\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport { HiEye, HiEyeOff } from \"react-icons/hi\";\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\nimport { toast } from \"react-toastify\";\nimport { postAPIHandler } from \"src/config/service\";\nimport { UserContext } from \"src/context/User\";\nimport PageLoading from \"src/component/PageLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  loginmainrSection: {\n    \"& .loginmainBox\": {\n      height: \"100dvh\",\n      position: \"relative\",\n      zIndex: \"9\",\n      overflowY: \"auto\",\n      \"& .MuiFormControl-fullWidth\": {\n        marginTop: \"8px\",\n      },\n      \"& p\": {\n        fontWeight: \"400\",\n        color: \"rgba(61, 61, 61, 1)\",\n      },\n      \"& svg\": {\n        color: \"rgba(61, 61, 61, 1)\",\n      },\n      \"& h2\": {\n        color: \"rgba(243, 109, 54, 1)\",\n        fontSize: \"40px\",\n      },\n      \"& label\": {\n        color: \"rgba(61, 61, 61, 1)\",\n      },\n      \"& .mainTextBox1\": {\n        \"& .MuiIconButton-label\": {\n          color: \"rgba(243, 109, 54, 1)\",\n        },\n        \"& svg\": {\n          color: \"rgba(243, 109, 54, 1)\",\n          paddingRight: \"0px\",\n        },\n      },\n      \"& .loginBox\": {\n        height: \"initail\",\n        margin: \"15px auto\",\n        maxWidth: \"95%\",\n        width: \"550px\",\n        maxHeight: \"100%\",\n      },\n\n      \"& h6\": {\n        color: \"rgba(61, 61, 61, 1)\",\n        fontWeight: \"500\",\n        fontSize: \"16px\",\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"12px !important\",\n          marginLeft: \"0px\",\n        },\n      },\n      \"& .forgotText\": {\n        color: \"rgba(65, 22, 67, 1)\",\n        cursor: \"pointer\",\n        fontWeight: 600,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"12px !important\",\n        },\n      },\n      \"& .descriptionText\": {\n        \"& p\": {\n          color: \"rgba(61, 61, 61, 1)\",\n        },\n        \"& span\": {\n          color: \" rgba(65, 22, 67, 1)\",\n        },\n      },\n    },\n  },\n}));\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const user = useContext(UserContext);\n  let rememberMe = window.localStorage.getItem(\"arbitage\");\n  const [isRemember, setIsRemember] = useState(rememberMe ? true : false);\n  let RememberData = isRemember && rememberMe ? JSON.parse(rememberMe) : \"\";\n\n  const initialValues = {\n    email: isRemember ? RememberData.email : \"\",\n    password: isRemember ? RememberData.password : \"\",\n  };\n  const formValidationSchema = yep.object().shape({\n    email: yep\n      .string()\n      .max(100, \"Should not exceeds 100 characters.\")\n      .email(\"Please enter a valid email address.\")\n      .required(\"Email is required.\"),\n    password: yep\n      .string()\n      .trim()\n      .required(\"Password is required.\")\n      .max(16, \"Password should not exceed 16 characters.\")\n      .min(8, \"Password must be a minimum of 8 characters.\"),\n  });\n\n  const handleFormSubmit = async (values) => {\n    try {\n      setIsUpdating(true);\n      const response = await postAPIHandler({\n        endPoint: \"login\",\n        dataToSend: {\n          email: values.email,\n          password: values.password,\n        },\n      });\n\n      if (response.data.responseCode === 200) {\n        toast.success(response.data.responseMessage);\n        window.sessionStorage.setItem(\"token\", response?.data?.result?.token);\n        if (isRemember) {\n          window.localStorage.setItem(\n            \"arbitage\",\n            JSON.stringify({ email: values.email, password: values.password })\n          );\n        } else {\n          window.localStorage.removeItem(\"arbitage\");\n        }\n        user.userLogIn(true, response?.data?.result?.token);\n        history.push(\"/dashboard\");\n      } else {\n        toast.error(response.data.responseMessage);\n      }\n      setIsUpdating(false);\n    } catch (error) {\n      setIsUpdating(false);\n    }\n  };\n\n  return (\n    <Box className={classes.loginmainrSection}>\n      <Box className=\"loginmainBox displayCenter\">\n        <Box className=\"loginBox\">\n          <Paper className=\"mainBox\" elevation={2}>\n            <Box className=\"displayColumn\" align=\"center\">\n              <Typography variant=\"h2\">Welcome Back</Typography>\n              <Box className=\"displayCenter descriptionText\">\n                <Typography variant=\"body1\" mt={1}>\n                  Don’t have an account?\n                  <span\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => history.push(\"/signup\")}\n                  >\n                    &nbsp;Sign Up\n                  </span>\n                </Typography>\n              </Box>\n            </Box>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={formValidationSchema}\n              onSubmit={(values) => handleFormSubmit(values)}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                touched,\n                values,\n                setFieldValue,\n              }) => (\n                <Form>\n                  <Box mt={2} className=\"mainTextBox\">\n                    <label>Email</label>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"Enter email Id\"\n                      type=\"email\"\n                      name=\"email\"\n                      value={values.email}\n                      error={Boolean(touched.email && errors.email)}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                    />\n                    <FormHelperText error className=\"errorMessage\">\n                      {touched.email && errors.email}\n                    </FormHelperText>\n                  </Box>\n                  <Box mt={2} className=\"mainTextBox\">\n                    <label>Password</label>\n                    <TextField\n                      placeholder=\"Enter your password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      name=\"password\"\n                      fullWidth\n                      variant=\"outlined\"\n                      value={values.password}\n                      error={Boolean(touched.password && errors.password)}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              style={{ paddingRight: \"15px\" }}\n                              onClick={() => setShowPassword(!showPassword)}\n                              edge=\"end\"\n                            >\n                              {showPassword ? (\n                                <HiEye className=\"iconClass1\" />\n                              ) : (\n                                <HiEyeOff className=\"iconClass1\" />\n                              )}\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <FormHelperText error className=\"errorMessage\">\n                      {touched.password && errors.password}\n                    </FormHelperText>\n                  </Box>\n\n                  <Box className=\"displaySpaceBetween\" my={2}>\n                    <Box className=\"displayStart mainTextBox1\">\n                      <Checkbox\n                        name=\"remember\"\n                        onChange={(e) => {\n                          setIsRemember(e.target.checked);\n                        }}\n                        checked={isRemember}\n                      />\n                      <Typography variant=\"h6\">Remember me</Typography>\n                    </Box>\n\n                    <Typography\n                      variant=\"h6\"\n                      className=\"forgotText\"\n                      onClick={() => history.push(\"/Forgot\")}\n                    >\n                      Forgot Password?\n                    </Typography>\n                  </Box>\n                  <Box mb={2} className=\"displayCenter\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      disabled={isUpdating}\n                    >\n                      Login\n                      {isUpdating && <ButtonCircularProgress />}\n                    </Button>\n                  </Box>\n                </Form>\n              )}\n            </Formik>\n          </Paper>\n        </Box>\n      </Box>\n      {isUpdating && <PageLoading />}\n    </Box>\n  );\n}\n"],"sourceRoot":""}