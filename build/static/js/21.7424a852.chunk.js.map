{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","component/Page.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","views/pages/BotSettings/Index.js"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","RadioGroupContext","Page","title","children","createSvgIcon","d","theme","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","easeIn","fontSize","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","_props$color","color","nameProp","onChangeProp","_props$size","size","radioGroup","createChainedFunction","concat","capitalize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","useStyles","makeStyles","paperBox","breakpoints","down","textheadBox","paddingBottom","borderBottom","marginTop","marginBottom","textAlign","mainBox","fontWeight","boatlimitBox","simple","alignItems","justifyContent","flexWrap","marginLeft","connetwallet","minWidth","connetwallet12","background","border","Arbitrage","borderRadius","fifteen","lineHeight","outline","selectHover","icons","imagebox","heading","dialogbox","maxHeight","overflowY","detailscard","image","discription","number","Index","history","useHistory","useWeb3React","account","activate","library","chainId","deactivate","useContext","UserContext","useState","loader","setLoader","isSubmit","setIsSubmit","open","setOpen","approveLoader","setApproveLoader","expectProfit","setexpectProfit","price1","setprice1","transactionLimit","setTransactionLimit","tokenList","setTokenList","tokenName","settokenName","setmyBalance","openWallect","setOpenWallect","tokenAllowanceTF","settokenAllowanceTF","AppTF","setAppTF","simpleArb","triangularArb","flashLoan","setState","handleClose","handleClickOpen","handleChange","listToken","a","axios","method","url","ApiConfig","res","data","responseCode","console","log","result","useEffect","AddAutoTradingArbitrage","addAutoTradingArbitrage","headers","token","sessionStorage","getItem","localStorage","tradeCount","price","arbitrageTriangular","arbitrageSimple","arbitrageFlashLon","toast","success","responseMessage","approveToken","getWeb3Obj","web3","TokenAddress","TokenAddressToUsed","filter","data12","myContract","getContract","ERC20ABI","allowance","ArbitrageContract","Number","utils","toWei","approve","from","gasPrice","gasLimit","toHex","wait","CheckmaxApproval","style","error","toastStyl","message","split","length","slice","aTokenAddress","balanceOf","getBalanceOf","decimals","deciamls","fromWeiDecimals","toString","elevation","onClick","goBack","src","variant","container","spacing","item","lg","md","sm","xs","align","mt","whiteSpace","placeholder","e","connetwallet13","onClose","fullWidth","maxWidth","map","i","handleSelect","data1","paddingTop"],"mappings":"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","file":"static/js/21.7424a852.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nexport default function Page(props) {\n  const { title, children } = props;\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div>{children}</div>\n    </>\n  );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import React, { useEffect, useState, useContext } from \"react\";\nimport {\n  Container,\n  makeStyles,\n  Box,\n  Typography,\n  Paper,\n  Button,\n  FormHelperText,\n  Dialog,\n  Grid,\n  IconButton,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Radio,\n} from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Page from \"src/component/Page\";\nimport axios from \"axios\";\nimport ApiConfig, { socketURL } from \"src/config/APICongig\";\nimport { toast } from \"react-toastify\";\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\nimport { BiChevronDown, BiChevronLeft } from \"react-icons/bi\";\nimport { BsSearch } from \"react-icons/bs\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  ArbitrageContract,\n  fromWeiDecimals,\n  getContract,\n  getWeb3Obj,\n} from \"src/utils\";\nimport ERC20ABI from \"src/ABI/IERC20ABI.json\";\nimport Web3 from \"web3\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport WalletConnectModal from \"src/component/ConnectWallet/WalletConnectModal\";\nimport { UserContext } from \"src/context/User\";\nimport { TokenAddressToUsed } from \"src/constants\";\nconst useStyles = makeStyles((theme) => ({\n  paperBox: {\n    padding: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"20px\",\n    },\n  },\n  textheadBox: {\n    paddingBottom: \"9px\",\n    borderBottom: \"1px solid #80808052\",\n    \"& h2\": {\n      fontSize: \"40px\",\n      color: \"rgb(243, 109, 54)\",\n    },\n  },\n  root: {\n    marginTop: \"16px\",\n    \"& .MuiFormHelperText\": {\n      marginTop: \"0\",\n      marginBottom: \"5px\",\n      textAlign: \"end\",\n    },\n  },\n  mainBox: {\n    \"& h5\": {\n      color: \"rgba(0, 0, 0, 1)\",\n      fontWeight: \"400\",\n    },\n  },\n  boatlimitBox: {\n    marginTop: \"20px\",\n    \"& h5\": {\n      color: \"rgba(0, 0, 0, 1)\",\n    },\n  },\n  simple: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"10px\",\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"10px\",\n      flexWrap: \"wrap\",\n    },\n    \"& div\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      // justifyContent: \"space-between\",\n      \"& h6\": {\n        color: \" rgba(61, 61, 61, 1)\",\n        fontSize: \"15px\",\n        marginLeft: \"-4px\",\n      },\n    },\n  },\n  connetwallet: {\n    marginTop: \"10px\",\n    fontWeight: 500,\n    minWidth: \"200px\",\n  },\n  connetwallet12: {\n    marginTop: \"10px\",\n    fontWeight: 500,\n    cursor: \"no-drop\",\n    background: \"#3f4a51 !important\",\n    border: \"1px solid #3f4a51 !important\",\n  },\n  Arbitrage: {\n    borderRadius: \"10px\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid rgba(243, 109, 54, 1)\",\n    \"& .MuiSwitch-switchBase\": {\n      color: \"#fff\",\n    },\n    \"& .MuiIconButton-root\": {\n      color: \"rgba(243, 109, 54, 1) !important\",\n    },\n  },\n\n  fifteen: {\n    backgroundColor: \"#ffffff\",\n    cursor: \"pointer\",\n    zIndex: \"9\",\n    width: \"90px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"4px\",\n    \"& h6\": {\n      lineHeight: \"35px\",\n      color: \"rgba(0, 0, 0, 1)\",\n    },\n    \"& input\": {\n      backgroundColor: \"transparent\",\n      border: \"none\",\n      color: \"#000000\",\n      fontWeight: 500,\n      textAlign: \"center\",\n      width: \"100%\",\n      fontSize: \"14px\",\n      lineHeight: \"30px\",\n      \"&:focus-visible\": {\n        outline: \"none !important\",\n      },\n    },\n  },\n\n  selectHover: {\n    border: \"1px solid #0f212e\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      border: \"1px solid #fafafa\",\n    },\n  },\n  icons: {\n    position: \"absolute\",\n    left: \"0px\",\n    top: \"12px\",\n    color: \"rgba(0, 0, 0, 1)\",\n  },\n  imagebox: {\n    cursor: \"pointer\",\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.background.default,\n    borderRadius: \"8px\",\n    justifyContent: \"center\",\n    padding: \"10px\",\n    \"& p\": {\n      marginLeft: \"8px\",\n      color: \"rgba(0, 0, 0, 1)\",\n    },\n  },\n  heading: {\n    marginLeft: \"25px\",\n  },\n  dialogbox: {\n    position: \"relative\",\n    padding: \"20px\",\n    maxHeight: \"95%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      overflowY: \"auto\",\n    },\n  },\n}));\nconst detailscard = [\n  {\n    image: \"images/image3.png\",\n    heading: \"Ethereum\",\n    discription: \"ETH\",\n    number: \"12\",\n  },\n  {\n    image: \"images/imageT.png\",\n    heading: \"USD Coin\",\n    discription: \"USDT\",\n    number: \"10\",\n  },\n  {\n    image: \"images/imageS.png\",\n    heading: \"Dai Stablecoin\",\n    discription: \"DAI\",\n    number: \"11\",\n  },\n  {\n    image: \"images/imageD.png\",\n    heading: \"Tether USD\",\n    discription: \"USD\",\n    number: \"13\",\n  },\n  {\n    image: \"images/imageS.png\",\n    heading: \"USDT Coin\",\n    discription: \"USDT\",\n    number: \"13\",\n  },\n];\n\nfunction Index() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { activate, account, chainId, library, deactivate } = useWeb3React();\n  const user = useContext(UserContext); // onClick={user.connectWallet}\n  const [loader, setLoader] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [approveLoader, setApproveLoader] = useState(false);\n  const [expectProfit, setexpectProfit] = useState(\"\");\n  const [price1, setprice1] = useState(\"\");\n  const [transactionLimit, setTransactionLimit] = useState(\"\");\n  const [tokenList, setTokenList] = useState([]);\n  const [tokenName, settokenName] = useState(\"\");\n  const [myBalance, setmyBalance] = useState(\"\");\n  const [openWallect, setOpenWallect] = useState(false);\n  const [tokenAllowanceTF, settokenAllowanceTF] = useState(false);\n  const [AppTF, setAppTF] = useState(false);\n  const [state, setState] = useState({\n    simpleArb: false,\n    triangularArb: false,\n    flashLoan: false,\n  });\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleSelect = (data) => {\n    setOpen(false);\n    settokenName(data);\n  };\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n  const listToken = async () => {\n    try {\n      const res = await axios({\n        method: \"GET\",\n        url: ApiConfig.listToken,\n      });\n      if (res.data.responseCode == 200) {\n        setLoader(false);\n        console.log(res.data.result);\n        setTokenList(res.data.result);\n      }\n    } catch (error) {\n      setLoader(false);\n      console.log(\"error\", error);\n    }\n  };\n  useEffect(() => {\n    listToken();\n  }, []);\n  const AddAutoTradingArbitrage = async () => {\n    setIsSubmit(true);\n    if (\n      transactionLimit != \"\" &&\n      transactionLimit > 0 &&\n      expectProfit != \"\" &&\n      expectProfit > 0 &&\n      price1 != \"\" &&\n      price1 > 0 &&\n      tokenName != \"\"\n    ) {\n      try {\n        setLoader(true);\n        const res = await axios({\n          method: \"POST\",\n          url: ApiConfig.addAutoTradingArbitrage,\n          headers: {\n            token:\n              sessionStorage.getItem(\"token\") ||\n              localStorage.getItem(\"creatturAccessToken\"),\n          },\n          data: {\n            tradeCount: transactionLimit,\n            expectProfit: expectProfit,\n            price: price1,\n            tokenName: tokenName.tokenName,\n            arbitrageTriangular: state.triangularArb,\n            arbitrageSimple: state.simpleArb,\n            arbitrageFlashLon: state.flashLoan,\n          },\n        });\n        if (res.data.responseCode == 200) {\n          setLoader(false);\n          setIsSubmit(false);\n          setTransactionLimit(\"\");\n          setprice1(\"\");\n          settokenName(\"\");\n          setexpectProfit(\"\");\n          toast.success(\n            `${res.data.responseMessage} for ${\n              state.triangularArb ? \"Triagular Arbitrage\" : \"\"\n            } ${state.simpleArb ? \"Simple Arbitrage\" : \"\"} ${\n              state.flashLoan ? \"Flash Loan\" : \"\"\n            }`\n          );\n          console.log(res.data);\n          // setexecutionsList(res.data.result);\n          // setexecutionsList1(res.data.result.docs);\n        }\n      } catch (error) {\n        setLoader(false);\n        console.log(\"error\", error);\n      }\n    }\n  };\n\n  const approveToken = async () => {\n    try {\n      setApproveLoader(true);\n      const web3 = await getWeb3Obj();\n      const TokenAddress = TokenAddressToUsed.filter(\n        (data12) => data12.heading == tokenName.tokenName\n      )[0];\n      const myContract = getContract(\n        TokenAddress.token,\n        ERC20ABI,\n        library,\n        account\n      );\n      console.log(\"myContract\", myContract);\n      let allowance = await myContract.allowance(account, ArbitrageContract);\n      setAppTF(true);\n      if (Number(allowance) < Number(web3.utils.toWei(price1, \"gwei\"))) {\n        const allowance = await myContract.approve(\n          ArbitrageContract,\n          web3.utils.toWei(price1),\n          {\n            from: account,\n            gasPrice: \"50000000000\",\n            gasLimit: web3.utils.toHex(\"300000\"),\n          }\n        );\n        await allowance.wait();\n        CheckmaxApproval();\n        toast.success(\n          <span\n            style={{ color: \"#fff\" }}\n          >{`${TokenAddress.heading} is approved`}</span>\n        );\n        setApproveLoader(false);\n      } else {\n        toast.success(\n          <span\n            style={{ color: \"#fff\" }}\n          >{`${TokenAddress.heading} is already approved`}</span>\n        );\n        setApproveLoader(false);\n      }\n    } catch (err) {\n      setApproveLoader(false);\n      toast.error(\n        <span className={classes.toastStyl}>\n          {err.message.split(\":\")[err.message.split(\":\").length - 1]}\n        </span>\n      );\n      console.log(err.message.slice(\":\")[err.message.slice(\":\").length - 1]);\n    }\n  };\n\n  const CheckmaxApproval = async () => {\n    try {\n      // setApproveLoader(true);\n      // console.log(\"--------data-------\", data);\n      const web3 = await getWeb3Obj();\n      const aTokenAddress = TokenAddressToUsed.filter(\n        (data12) => data12.heading == tokenName.tokenName\n      )[0];\n      // console.log(\"aTokenAddress===>>\", aTokenAddress.token);\n      const myContract = getContract(\n        aTokenAddress.token,\n        ERC20ABI,\n        library,\n        account\n      );\n\n      let allowance = await myContract.allowance(account, ArbitrageContract);\n      let getBalanceOf = await myContract.balanceOf(account);\n      let deciamls = await myContract.decimals();\n      setmyBalance(fromWeiDecimals(getBalanceOf.toString(), deciamls));\n      setAppTF(true);\n      if (\n        Number(allowance) < Number(web3.utils.toWei(price1.toString(), \"gwei\"))\n      ) {\n        // settokenAllowance(Number(allowance));  for Zero\n        console.log(\"ALLOWANCE FAIL OR SUCCESS\", allowance);\n        settokenAllowanceTF(false);\n      } else {\n        console.log(\"ALLOWANCE FAIL OR SUCCESS\", allowance);\n        // settokenAllowance(Number(allowance));\n        settokenAllowanceTF(true);\n      }\n    } catch (err) {\n      settokenAllowanceTF(false);\n      console.log(err.message);\n    }\n  };\n  useEffect(() => {\n    if ((tokenName.tokenName, price1)) {\n      CheckmaxApproval();\n    }\n  }, [tokenName.tokenName, price1]);\n  const HandleWalletModal = () => {\n    setOpenWallect(true);\n    user.connectWallet();\n  };\n  const CloseWalletModal = () => {\n    setOpenWallect(false);\n  };\n\n  return (\n    <Page title=\"Bot Setting\">\n      <Paper elevation={2} className={classes.paperBox}>\n        <Box className={classes.textheadBox}>\n          <Box className=\"displayStart\">\n            <img\n              onClick={() => history.goBack(\"/\")}\n              src=\"/images/arrowback.svg\"\n              width=\"35px\"\n              style={{ cursor: \"pointer\" }}\n            />\n            &nbsp;&nbsp;\n            <Typography variant=\"h2\" style={{ color: \"rgba(243, 109, 54, 1)\" }}>\n              Trade Settings\n            </Typography>\n          </Box>\n        </Box>\n        {openWallect && (\n          <WalletConnectModal\n            open={openWallect}\n            handleClose={CloseWalletModal}\n          />\n        )}\n        <Grid container spacing={0}>\n          <Grid item lg={6} md={6} sm={12} xs={12} align=\"center\">\n            <Box className={classes.mainBox} mt={3} align=\"left\">\n              <Typography variant=\"h5\" style={{ color: \"rgba(61, 61, 61, 1)\" }}>\n                Arbitrage Strategy\n              </Typography>\n              <Box className={classes.Arbitrage} mt={2}>\n                <Box className={classes.simple}>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Radio\n                      checked={state.simpleArb}\n                      onChange={handleChange}\n                      name=\"simpleArb\"\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                    />\n                    <Typography variant=\"h6\">Simple Arbitrage</Typography>\n                  </Box>\n\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Radio\n                      checked={state.triangularArb}\n                      onChange={handleChange}\n                      name=\"triangularArb\"\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                    <Typography variant=\"h6\">Triagular Arbitrage</Typography>\n                  </Box>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Radio\n                      checked={state.flashLoan}\n                      onChange={handleChange}\n                      name=\"flashLoan\"\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                    />\n                    <Typography variant=\"h6\">Flash Loan</Typography>\n                  </Box>\n                </Box>\n              </Box>\n\n              {(state.simpleArb || state.triangularArb || state.flashLoan) && (\n                <Box className={classes.boatlimitBox}>\n                  <Typography\n                    variant=\"h5\"\n                    style={{ color: \"rgba(61, 61, 61, 1)\" }}\n                  >\n                    Bot Limit\n                  </Typography>\n                  <Paper\n                    elevation={2}\n                    style={{ padding: \"20px\", marginBottom: \"10px\" }}\n                  >\n                    <Box\n                      style={{\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        padding: \"0px\",\n                      }}\n                    >\n                      <Box\n                        className={classes.simple}\n                        style={{\n                          justifyContent: \"start\",\n                          padding: \"0px\",\n                        }}\n                      >\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"start\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"h6\"\n                            style={{ whiteSpace: \"pre\" }}\n                          >\n                            Min Profit:\n                          </Typography>\n                          <Box\n                            className={`numberTextField ${classes.fifteen}`}\n                            style={{\n                              background: \"rgba(61, 61, 61, 0.1)\",\n                              width: \"100%\",\n                              padding: \"9px\",\n                              marginLeft: \"20px\",\n                            }}\n                          >\n                            <input\n                              type=\"number\"\n                              placeholder=\"15\"\n                              onChange={(e) =>\n                                setTransactionLimit(e.target.value)\n                              }\n                              value={transactionLimit}\n                            />\n                          </Box>\n                        </Box>\n                      </Box>\n                      <FormHelperText\n                        error\n                        style={{\n                          textAlign: \"end\",\n                          marginTop: \"0\",\n                          marginBottom: \"5px\",\n                        }}\n                      >\n                        {transactionLimit == \"\" &&\n                          isSubmit &&\n                          \"Transaction limit is required field\"}\n                        {transactionLimit <= 0 &&\n                          isSubmit &&\n                          \"Transaction limit must be greater than 0\"}\n                      </FormHelperText>\n                    </Box>\n                  </Paper>\n                  <Paper\n                    elevation={2}\n                    style={{ padding: \"20px\", marginBottom: \"10px\" }}\n                  >\n                    <Box\n                      style={{\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        padding: \"0px\",\n                      }}\n                    >\n                      <Box\n                        className={classes.simple}\n                        style={{\n                          justifyContent: \"start\",\n                          padding: \"0px\",\n                        }}\n                      >\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"start\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"h6\"\n                            style={{ whiteSpace: \"pre\" }}\n                          >\n                            Currency:\n                          </Typography>\n                          <Box\n                            className={`numberTextField ${classes.fifteen}`}\n                            style={{\n                              background: \"rgba(61, 61, 61, 0.1)\",\n                              width: \"100%\",\n                              padding: \"9px\",\n                              marginLeft: \"20px\",\n                            }}\n                          >\n                            <input\n                              type=\"number\"\n                              placeholder=\"500\"\n                              onChange={(e) => setprice1(e.target.value)}\n                              value={price1}\n                            />\n                          </Box>\n                        </Box>\n                      </Box>\n                      <FormHelperText\n                        error\n                        style={{\n                          textAlign: \"end\",\n                          marginTop: \"0\",\n                          marginBottom: \"5px\",\n                        }}\n                      >\n                        {price1 == \"\" &&\n                          isSubmit &&\n                          \"Max investment is required field\"}\n                        {price1 <= 0 &&\n                          isSubmit &&\n                          \"Max investment must be greater than 0\"}\n                      </FormHelperText>\n                    </Box>\n                  </Paper>\n                  <Paper\n                    elevation={2}\n                    style={{ padding: \"20px\", marginBottom: \"10px\" }}\n                  >\n                    <Box\n                      style={{\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        padding: \"0px\",\n                      }}\n                    >\n                      <Box\n                        className={classes.simple}\n                        style={{\n                          justifyContent: \"start\",\n                          padding: \"0px\",\n                        }}\n                      >\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"start\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"h6\"\n                            style={{ whiteSpace: \"pre\" }}\n                          >\n                            Expect Profit :{\" \"}\n                          </Typography>\n                          <Box\n                            className={`numberTextField ${classes.fifteen}`}\n                            style={{\n                              background: \"rgba(61, 61, 61, 0.1)\",\n                              width: \"100%\",\n                              padding: \"9px\",\n                              marginLeft: \"20px\",\n                            }}\n                          >\n                            <input\n                              type=\"number\"\n                              placeholder=\"100\"\n                              onChange={(e) => setexpectProfit(e.target.value)}\n                              value={expectProfit}\n                            />\n                          </Box>\n                        </Box>\n                      </Box>\n                      <FormHelperText\n                        error\n                        style={{\n                          textAlign: \"end\",\n                          marginTop: \"0\",\n                          marginBottom: \"5px\",\n                        }}\n                      >\n                        {expectProfit == \"\" &&\n                          isSubmit &&\n                          \"Expect profit is required field\"}\n                        {expectProfit <= 0 &&\n                          isSubmit &&\n                          \"Expect profit limit must be greater than 0\"}\n                      </FormHelperText>\n                    </Box>\n                  </Paper>\n                  <Paper elevation={2} style={{ padding: \"20px\" }}>\n                    <Box\n                      style={{\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        padding: \"0px\",\n                      }}\n                    >\n                      <Box\n                        className={classes.simple}\n                        style={{\n                          justifyContent: \"start\",\n                          padding: \"0px\",\n                        }}\n                      >\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"start\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"h6\"\n                            style={{ whiteSpace: \"pre\" }}\n                          >\n                            Token Name :{\" \"}\n                          </Typography>\n                          <Box\n                            className={`numberTextField ${classes.fifteen}`}\n                            style={{\n                              background: \"rgba(61, 61, 61, 0.1)\",\n                              width: \"100%\",\n                              padding: \"9px\",\n                              marginLeft: \"20px\",\n                            }}\n                            onClick={() => handleClickOpen()}\n                          >\n                            <input\n                              style={{ cursor: \"pointer\" }}\n                              // type=\"number\"\n                              placeholder=\"select\"\n                              // onChange={(e) => settokenName(e.target.value)}\n                              disabled\n                              value={tokenName.tokenName}\n                            />\n                            {/* <Box className={classes.iconBox}> */}\n                            <BiChevronDown\n                              style={{\n                                width: \"30px\",\n                                height: \"30px\",\n                                cursor: \"pointer\",\n                              }}\n                              // onClick={handleClickOpenBuy}\n                              onClick={() => handleClickOpen()}\n                            />\n                            {/* </Box> */}\n                          </Box>\n                        </Box>\n                      </Box>\n                      <FormHelperText\n                        error\n                        style={{\n                          textAlign: \"end\",\n                          marginTop: \"0\",\n                          marginBottom: \"5px\",\n                        }}\n                      >\n                        {tokenName == \"\" &&\n                          isSubmit &&\n                          \"Token name is required field\"}\n                      </FormHelperText>\n                    </Box>\n                  </Paper>\n                </Box>\n              )}\n\n              {account ? (\n                <Box mt={4} align=\"center\">\n                  {!tokenAllowanceTF ? (\n                    <Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      color=\"primary\"\n                      onClick={() => {\n                        if (!approveLoader && AppTF) {\n                          approveToken();\n                        }\n                      }}\n                      className={\n                        !approveLoader && AppTF\n                          ? classes.connetwallet\n                          : classes.connetwallet13\n                      }\n                      // disabled={approveLoader || !AppTF}\n                    >\n                      Allow Protocal to use your {tokenName.tokenName}{\" \"}\n                      {approveLoader && <ButtonCircularProgress />}\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {\n                        if (!loader) {\n                          AddAutoTradingArbitrage();\n                        }\n                      }}\n                      // disabled={loader}\n                      className={\n                        !loader ? classes.connetwallet : classes.connetwallet12\n                      }\n                    >\n                      SAVE {loader && <ButtonCircularProgress />}\n                    </Button>\n                  )}\n                </Box>\n              ) : (\n                <Box mt={2} align=\"left\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    // fullWidth\n                    className={classes.connetwallet}\n                    // onClick={user.connectWallet}\n                    // onClick={HandleWalletModal}\n                  >\n                    SAVE\n                  </Button>\n                </Box>\n              )}\n            </Box>\n          </Grid>\n        </Grid>{\" \"}\n        <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n          <Box className={classes.dialogbox}>\n            <IconButton className={classes.icons} onClick={handleClose}>\n              <BiChevronLeft />\n            </IconButton>\n            <DialogTitle>\n              <Typography variant=\"h6\" align=\"center\">\n                Select a token\n              </Typography>\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                <Box>\n                  {/* <FormControl fullWidth>\n                    <TextField\n                      variant=\"outlined\"\n                      name=\"firstName\"\n                      size=\"small\"\n                      fullWidth=\"true\"\n                      placeholder=\"Search by name\"\n                      className={classes.textfield}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <IconButton style={{ fontSize: \"17px\" }}>\n                              <BsSearch />\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </FormControl> */}\n                </Box>\n                {/* <Box mt={2}>\n                  <Grid container spacing={1}>\n                    <Grid item lg={3} md={3} sm={3} xs={6}>\n                      <Box className={classes.imagebox}>\n                        <img src=\"./images/image1.png\" />\n                        <Typography variant=\"body1\">ETH</Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xs={6}>\n                      <Box className={classes.imagebox}>\n                        <img src=\"./images/image1.png\" />\n                        <Typography variant=\"body1\">USDT</Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xs={6}>\n                      <Box className={classes.imagebox}>\n                        <img src=\"./images/image1.png\" />\n                        <Typography variant=\"body1\">USD</Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xs={6}>\n                      <Box className={classes.imagebox}>\n                        <img src=\"./images/image1.png\" />\n                        <Typography variant=\"body1\">DAI</Typography>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box> */}\n                <Box mt={2}>\n                  <Grid container spacing={1}>\n                    {tokenList &&\n                      tokenList?.map((data, i) => {\n                        return (\n                          <Grid item lg={12} md={12} sm={12} xs={12}>\n                            <Grid container className={classes.selectHover}>\n                              <Grid item lg={6} md={6} sm={6} xs={6}>\n                                <Box\n                                  display=\"flex\"\n                                  alignItems=\"center\"\n                                  onClick={(e) => handleSelect(data)}\n                                  // className={classes.selectHover}\n                                >\n                                  <img\n                                    src={\n                                      detailscard.filter(\n                                        (data1) =>\n                                          data1.heading == data.tokenName\n                                      )[0]?.image\n                                    }\n                                    style={{ width: \"30px\" }}\n                                  />\n\n                                  <Box className={classes.heading}>\n                                    <Typography variant=\"body2\">\n                                      {\" \"}\n                                      {data.tokenName}\n                                    </Typography>\n                                    <Typography variant=\"body1\">\n                                      {\n                                        detailscard.filter(\n                                          (data1) =>\n                                            data1.heading == data.tokenName\n                                        )[0]?.discription\n                                      }\n                                    </Typography>\n                                  </Box>\n                                </Box>\n                              </Grid>\n                              <Grid\n                                item\n                                lg={6}\n                                md={6}\n                                sm={6}\n                                xs={6}\n                                align=\"right\"\n                              >\n                                <Typography\n                                  variant=\"body1\"\n                                  style={{ paddingTop: \"10px\" }}\n                                >\n                                  {data.number}\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        );\n                      })}\n                  </Grid>\n                </Box>\n              </DialogContentText>\n            </DialogContent>\n          </Box>\n        </Dialog>\n      </Paper>\n    </Page>\n  );\n}\n\nexport default Index;\n"],"sourceRoot":""}