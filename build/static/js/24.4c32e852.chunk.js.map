{"version":3,"sources":["component/Page.js","component/MetricsChart.js","views/pages/Profile/Profile.js","component/PriceChecker/PriceCheckerTable.js","component/PriceChecker/PriceChecker.js","component/PriceChecker/SushiSwapPriceCheck.js","component/PriceChecker/ShibaswapPriceChecker.js","views/pages/Dasboard/Profile.js","views/pages/Dasboard/DashboardnewCard.js","views/pages/Dasboard/LineChart.js","views/pages/Dasboard/Index.js"],"names":["Page","props","title","children","makeStyles","theme","mainBox","fill","color","root","padding","bannerimg","overflow","background","position","backgroundPosition","backgroundRepeat","backgroundSize","height","borderRadius","minHeight","minWidth","width","top","left","transform","headbox2","display","justifyContent","alignItems","marginBottom","text1","fontStyle","fontWeight","fontSize","lineHeight","profileimg","marginTop","zIndex","useStyles","ethers","providers","WebSocketProvider","backgroundColor","PriceCheckerTable","data","classes","React","useState","UniwapPrice","setUniwapPrice","ShushiswapPrice","setShushiswapPrice","priceCheck","a","APITokenPriceHandler","tokenM","UniswapFactory","PriceAPI","ShushiswapFactory","PriceAPIShushiSwap","console","log","useEffect","timer","setTimeout","clearTimeout","TableRow","className","TableCell","component","scope","Box","style","Avatar","src","Typography","variant","textAlign","profilecardBox","whiteSpace","marginRight","marginLeft","paddingLeft","borderLeft","border","Profile","useHistory","mt","Grid","container","spacing","item","md","lg","sm","xs","Paper","elevation","Button","mb","dashboardcardBox","content","DashboardnewCard","ml","align","tablemainbox","borderBottom","LineChart","series","name","options","chart","type","toolbar","show","dataLabels","enabled","stroke","curve","grid","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","colors","legend","horizontalAlign","labels","useSeriesColors","markers","size","hover","tooltip","intersect","shared","yaxis","lines","decimalsInFloat","xaxis","categories","x","format","inverseColors","chartData","p","id","bannerBox","breakpoints","only","cursor","filterBtn","margin","boxShadow","boxSizing","imgtextbox","down","tableBaseContent","writingMode","textOrientation","tableData1","TxHash","CoinName","ExchangeA","ExchangeB","DateTime","PriceDifference","Profit","Features","recentCol","setRecentCol","setSelectRankingDays","profit","setProfit","executionsList","setexecutionsList","setexecutionsList1","setgraphData","setdashboard","account","useWeb3React","user","useContext","UserContext","history","setdaiWeth","setdaiUsdc","setwethUsdc","setuniWeth","dashboardHandler","axios","method","url","ApiConfig","dashboard","headers","token","sessionStorage","getItem","localStorage","res","responseCode","result","graphHandler","graph","list","reverse","buyTokenHandler","buyTokenList","docs","isLogin","web","WebSocket","socketURL","onopen","send","JSON","stringify","option","fromToken","toToken","amounts","onmessage","event","newObj","parse","close","err","ExecutionName","TableContainer","Table","TableHead","TableBody","map","index","textTransform","length","onClick","push","PriceCheckerBox","TokenAddressToUsed","heading","AccountbalanceBox","Menu","anchorEl","keepMounted","MenuSelector","open","Boolean","onClose","MenuItem","paginationLimit","i","key"],"mappings":"wJAAA,gEAEe,SAASA,EAAKC,GAC3B,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OACE,oCACE,kBAAC,IAAD,KACE,+BAAQD,IAEV,6BAAMC,M,kihBCLMC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACP,SAAU,CACRC,KAAM,mBAGR,sBAAuB,CACrBC,MAAO,wB,4BCRKJ,aAAW,SAACC,GAAD,MAAY,CACrCI,KAAM,CAAEC,QAAS,gBACjBC,UAAW,CACPC,SAAU,SACVC,WAAY,kBACZC,SAAU,WACVC,mBAAoB,oBACpBC,iBAAkB,wBAClBC,eAAgB,kBAChBC,OAAQ,QACRC,aAAc,OACd,2BAA4B,CACxBD,OAAQ,QACRC,aAAc,QAGlB,QAAS,CACLC,UAAW,OACXC,SAAU,OACVH,OAAQ,OACRI,MAAO,OACPR,SAAU,WACVS,IAAK,MACLC,KAAM,MACNC,UAAW,0BAGnBC,SAAU,CACNC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZnB,QAAS,YACToB,aAAc,OACd,0BAA2B,CACvBH,QAAS,QACTjB,QAAS,WAGjBqB,MAAO,CACHJ,QAAS,OACTE,WAAY,SACZ,OAAQ,CACJG,UAAW,SACXC,WAAY,OACZC,SAAU,OACVC,WAAY,OACZR,QAAS,OACTE,WAAY,SACZ,2BAA4B,CACxBK,SAAU,QAEd,0BAA2B,CACvBA,SAAU,SAGlB,OAAQ,CACJF,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,WAAY,OACZ3B,MAAO,6BAGf4B,WAAY,CACRC,UAAW,SACXzB,SAAU,SACVG,mBAAoB,oBACpBE,eAAgB,kBAChBD,iBAAkB,wBAClBH,WAAY,oBACZS,MAAO,QACPJ,OAAQ,QACRC,aAAc,OACdmB,OAAQ,IACR,0BAA2B,CACvBD,UAAW,QACXf,MAAO,OACPJ,OAAQ,OACRC,aAAc,OACdmB,OAAQ,GAEZ,QAAS,CACLlB,UAAW,OACXC,SAAU,OACVH,OAAQ,OACRI,MAAO,OACPH,aAAc,Y,iFCnEpBoB,GCQW,IAAIC,IAAOC,UAAUC,kBACpC,kE,wBClBe,IAAIF,IAAOC,UAAUC,kBACpC,kE,OCiBe,IAAIF,IAAOC,UAAUC,kBACpC,kE,QHVgBtC,aAAW,SAACC,GAAD,MAAY,CACvCI,KAAM,CACJ,sBAAuB,CACrBkC,gBAAiB,WAEnB,qBAAsB,CACpBA,gBAAiB,iBAgHRC,EA5GW,SAAC3C,GACzB,IAAQ4C,EAAS5C,EAAT4C,KACFC,EAAUP,IAEhB,EAA0BQ,IAAMC,SAAS,GAAzC,mBACA,GADA,UACsCD,IAAMC,SAAS,IAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CH,IAAMC,SAAS,GAA7D,mBAAOG,EAAP,KAAwBC,EAAxB,KAKMC,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,YAAqBV,EAAKW,OAAQC,KAF1C,cAETC,EAFS,OAGfR,EAAeQ,GAHA,SAOkBH,YAC/BV,EAAKW,OACLG,KATa,OAOTC,EAPS,OAYfC,QAAQC,IAAI,2BAA4BF,GAExCR,EAAmBQ,GAdJ,kDAyBfC,QAAQC,IAAR,MAzBe,0DAAH,qDA0ChB,OAdAC,qBAAU,WACRV,MACC,IACHU,qBAAU,WAER,IAAMC,EAAQC,YAAW,WACvBZ,MACC,KAEH,OAAO,WAELa,aAAaF,OAIf,kBAACG,EAAA,EAAD,CAAUC,UAAWtB,EAAQrC,MAC3B,kBAAC4D,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,OAAhC,qBAGA,kBAACF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAKJ,UAAU,eAAeK,MAAO,CAAE5C,WAAY,aACjD,kBAAC6C,EAAA,EAAD,CAAQC,IAAI,uBAAuBrD,MAAM,OAAOJ,OAAO,SADzD,OAGE,kBAAC0D,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEjE,MAAO,wBAAzC,OAHF,iBASF,kBAAC6D,EAAA,EAAD,KACG,IADH,iBAMiBpB,GAEjB,kBAACoB,EAAA,EAAD,wBAEmBlB,GAGnB,kBAACkB,EAAA,EAAD,CACEI,MAAO,CAAEjE,MAAO,wBAAyBsE,UAAW,WADtD,OAQO7B,GAEP,kBAACoB,EAAA,EAAD,CAAWI,MAAO,CAAEK,UAAW,WAA/B,yBAIA,kBAACT,EAAA,EAAD,CAAWI,MAAO,CAAEjE,MAAO,0BAA3B,OAMOyC,KI3HPV,EAAYnC,aAAW,SAACC,GAAD,MAAY,CACvC0E,eAAgB,CACdjE,SAAU,WACV,OAAQ,CACNN,MAAO,iCACPsE,UAAW,OACXE,WAAY,iBACZ9C,SAAU,mBAEZ,OAAQ,CACNA,SAAU,OACVC,WAAY,OACZ3B,MAAO,yBAET,gBAAiB,CACfU,OAAQ,kBACR+D,YAAa,OACbD,WAAY,OAEd,aAAc,CACZ7D,aAAc,MACdG,MAAO,OACPJ,OAAQ,OACRgE,WAAY,OACZC,YAAa,OACbC,WAAY,qBAEd,0BAA2B,CACzB,gBAAiB,CACflE,OAAQ,kBACR+D,YAAa,OACbD,WAAY,MACZK,OAAQ,2CACR7E,MAAO,iCACP,UAAW,CACTK,WAAY,iCACZL,MAAO,qBAIb,oBAAqB,CACnBE,QAAS,OACTI,SAAU,WACVwB,OAAQ,IACR1B,SAAU,SAYV,oBAAqB,CACnBE,SAAU,WACVS,IAAK,QACLC,KAAM,IACNN,OAAQ,OACRI,MAAO,cAMA,SAASgE,IACtB,IAAMxC,EAAUP,IACAgD,cAChB,OACE,kBAACf,EAAA,EAAD,CAAKJ,UAAWtB,EAAQiC,eAAgBS,GAAI,GAC1C,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGlB,MAAO,CAAE5C,WAAY,WAC/C,kBAAC4D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG9B,UAAU,kBAC7B,yBACEO,IAAI,uCACJP,UAAU,mBAEZ,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEK,UAAW,SAA7C,kCAGA,kBAACN,EAAA,EAAD,CAAKJ,UAAU,eAAeoB,GAAI,GAChC,kBAACW,EAAA,EAAD,CAAQtB,QAAQ,WAAWrE,MAAM,UAAU4D,UAAU,cAArD,UAGA,kBAAC+B,EAAA,EAAD,CAAQtB,QAAQ,WAAWrE,MAAM,UAAU4D,UAAU,cAArD,UAGA,kBAAC+B,EAAA,EAAD,CAAQtB,QAAQ,WAAWrE,MAAM,UAAU4D,UAAU,cAArD,WAIF,kBAACI,EAAA,EAAD,CAAKJ,UAAU,eAAeoB,GAAI,EAAGY,GAAI,GACtC,IACD,kBAAC5B,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEK,UAAW,SAA7C,YAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEK,UAAW,SAA7C,aAIF,kBAACJ,EAAA,EAAD,CAAQC,IAAI,4BAA4BP,UAAU,eAIxD,kBAACqB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG9B,UAAU,uCAC7B,yBACEO,IAAI,+BACJP,UAAU,mCAEZ,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEK,UAAW,SAA7C,kCAGA,kBAACN,EAAA,EAAD,CAAKJ,UAAU,eAAeoB,GAAI,EAAGY,GAAI,GACvC,kBAACD,EAAA,EAAD,CAAQtB,QAAQ,WAAWrE,MAAM,UAAU4D,UAAU,cAArD,UAGA,kBAAC+B,EAAA,EAAD,CAAQtB,QAAQ,WAAWrE,MAAM,UAAU4D,UAAU,cAArD,UAGA,kBAAC+B,EAAA,EAAD,CAAQtB,QAAQ,WAAWrE,MAAM,UAAU4D,UAAU,cAArD,WAIF,kBAACI,EAAA,EAAD,CAAKJ,UAAU,eAAeoB,GAAI,EAAGY,GAAI,GACtC,IACD,kBAAC5B,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CAAEK,UAAW,OAAQtE,MAAO,wBAFrC,YAMA,kBAACoE,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CAAEK,UAAW,OAAQtE,MAAO,wBAFrC,aAOF,kBAACkE,EAAA,EAAD,CACEC,IAAI,kCACJP,UAAU,UACVK,MAAO,CAAEW,WAAY,wCClJrC,IAAM7C,EAAYnC,aAAW,SAACC,GAAD,MAAY,CACvCgG,iBAAkB,CAChBvF,SAAU,WACV,OAAQ,CACNN,MAAO,aAET,yBAA0B,CACxBqB,WAAY,aACZf,SAAU,WACVwB,OAAQ,IACR,YAAa,CACXhB,MAAO,MACPJ,OAAQ,OACRoF,QAAS,KACThE,OAAQ,IACRxB,SAAU,WACVD,WAAY,sBACZU,IAAK,IACLC,KAAM,IACNL,aAAc,SAGlB,iBAAkB,CAChB,YAAa,CACXN,WAAY,+BAIhB,aAAc,CACZM,aAAc,MACdG,MAAO,OACPJ,OAAQ,QAEV,oBAAqB,CACnBR,QAAS,aAKA,SAAS6F,IACtB,IAAMzD,EAAUP,IACAgD,cAChB,OACE,kBAACf,EAAA,EAAD,CAAKJ,UAAWtB,EAAQuD,kBACtB,kBAACZ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGlB,MAAO,CAAE5C,WAAY,WAC/C,kBAAC4D,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,IAClC,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG9B,UAAU,kBAC7B,kBAACI,EAAA,EAAD,CAAKJ,UAAU,uBACb,kBAACI,EAAA,EAAD,CAAKgC,GAAI,EAAGC,MAAM,QAChB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,WAEF,kBAACH,EAAA,EAAD,CACEC,IAAI,oCACJP,UAAU,eAKlB,kBAACqB,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,IAClC,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG9B,UAAU,kBAC7B,kBAACI,EAAA,EAAD,CAAKJ,UAAU,mCACb,kBAACI,EAAA,EAAD,CAAKgC,GAAI,EAAGC,MAAM,QAChB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,QAEF,kBAACH,EAAA,EAAD,CACEC,IAAI,iCACJP,UAAU,eAKlB,kBAACqB,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,IAClC,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG9B,UAAU,iCAC7B,kBAACI,EAAA,EAAD,CAAKJ,UAAU,uBACb,kBAACI,EAAA,EAAD,CAAKgC,GAAI,EAAGC,MAAM,QAChB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,WAEF,kBAACH,EAAA,EAAD,CACEC,IAAI,oCACJP,UAAU,eAKlB,kBAACqB,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,IAClC,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG9B,UAAU,kBAC7B,kBAACI,EAAA,EAAD,CAAKJ,UAAU,mCACb,kBAACI,EAAA,EAAD,CAAKgC,GAAI,EAAGC,MAAM,QAChB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,MAApB,mBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,SAEF,kBAACH,EAAA,EAAD,CAAQC,IAAI,gCAAgCP,UAAU,gBAK9D,kBAAC,EAAD,OCxGN,IAAM7B,EAAYnC,aAAW,SAACC,GAAD,MAAY,CACvCqG,aAAc,CACZ,iBAAkB,CAChBhG,QAAS,OACTiG,aAAc,oBACd,QAAS,CACPzE,SAAU,QAEZ,OAAQ,CACND,WAAY,MACZiD,WAAY,cAyIL0B,EAnIG,WAAO,IAAD,EAChB9D,EAAUP,IAEhB,EAAkCS,mBAAS,CACzC6D,OAAQ,CACN,CACEC,KAAM,aACNjE,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,MAOzDkE,SAAO,GACLC,MAAO,CACL9F,OAAQ,IACR+F,KAAM,OACNC,QAAS,CACPC,MAAM,IAGVC,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAO,YAETC,KAAM,CACJL,MAAM,GAER5G,KAAM,CACJ0G,KAAM,WACNQ,SAAU,CACRC,MAAO,OACPC,iBAAkB,CAAC,WACnBC,eAAgB,EAChBX,KAAM,aACNY,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAGzBC,OAAQ,CAAC,WACTC,OAAQ,CACNnH,SAAU,MACVoH,gBAAiB,QACjBC,OAAQ,CACNH,OAAQ,WACRI,iBAAiB,IAGrBC,QAAS,CACPC,KAAM,EACNC,MAAO,CACLD,KAAM,IAGVE,QAAS,CACPC,WAAW,EACXC,QAAQ,GAGVC,MAAO,CACLxB,MAAM,EACNgB,OAAQ,CACNhB,MAAM,GAERyB,MAAO,CACLzB,MAAM,GAER0B,gBAAiB,GAEnBC,MAAO,CACL7B,KAAM,OACN8B,WAAY,CACV,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAzEC,wBA4EI,CACPC,EAAG,CACDC,OAAQ,oBA9EP,qBAiFC,CACJxB,SAAU,CACRC,MAAO,QACPT,KAAM,WACNW,eAAgB,IAChBD,iBAAkB,CAChB,UACA,oEAEFuB,eAAe,EACfrB,YAAa,IACbC,UAAW,IACXC,MAAO,CAAC,EAAG,QA7FV,KAXT,mBAAOoB,EAAP,UA8GA,OACE,kBAAC3E,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAKJ,UAAWtB,EAAQ4D,cACtB,kBAAClC,EAAA,EAAD,CAAK4E,EAAG,GACN,yBAAKC,GAAG,SACN,kBAAC,IAAD,CACEtC,QAASoC,EAAUpC,QACnBF,OAAQsC,EAAUtC,OAClBI,KAAK,OACL/F,OAAQ,WCpGhBqB,EAAYnC,aAAW,SAACC,GAAD,kBAC3BiJ,WAAS,GACP,uBAAwB,CACtBpI,OAAQ,OACRR,QAAS,UAGX,uBAAwB,CACtBQ,OAAQ,OACRR,QAAS,UAGXoE,UAAW,UAXJ,cAYNzE,EAAMkJ,YAAYC,KAAK,MAAQ,CAC9B9I,QAAS,aAbJ,cAeP,OAAQ,CACNwB,SAAU,OACVD,WAAY,MACZzB,MAAO,mCAlBF,cAoBP,OAAQ,CACNA,MAAO,mCArBF,cAuBP,QAAS,CACP6B,UAAWhC,EAAMsF,QAAQ,KAxBpB,cA0BP,gBAAiB,CACfhE,QAAS,OACTE,WAAY,SACZD,eAAgB,QA7BX,cA+BP,cAAe,CACbD,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBN,MAAO,OACP,MAAO,CACLd,MAAO,WAET,QAAS,CACP0B,SAAU,OACVgD,WAAY,MACZ1E,MAAO,aA1CJ,cA6CP,aAAc,CACZmB,QAAS,OACTE,WAAY,SACZD,eAAgB,MAChB6H,OAAQ,UACR,MAAO,CACLjJ,MAAO,WAET,QAAS,CACP0B,SAAU,OACVgD,WAAY,MACZ1E,MAAO,aAxDJ,cA2DP,UAAW,CACT,OAAQ,CACNA,MAAO,aA7DJ,GAiETkJ,UAAW,CACTC,OAAQ,WACRzH,SAAU,OACVrB,WAAY,kBACZL,MAAO,OACPoJ,UAAW,+BACXC,UAAW,aACX5H,WAAY,MACZE,WAAY,OACZhB,aAAc,OAEhB2I,WAAW,aACTxI,MAAO,SACNjB,EAAMkJ,YAAYQ,KAAK,MAAQ,CAC9BzI,MAAO,UAGX0I,iBAAkB,CAChBrI,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBe,gBAAiB,UACjBxB,aAAc,mBAEhBV,KAAM,CACJ,sBAAuB,CACrBkC,gBAAiB,WAEnB,qBAAsB,CACpBA,gBAAiB,aA/FM,0BAkGhB,CACTgH,OAAQ,WACRzH,SAAU,OACVrB,WAAY,kBACZL,MAAO,OACPoJ,UAAW,+BACXC,UAAW,aACX5H,WAAY,MACZE,WAAY,OACZhB,aAAc,QA3GW,qBA6GrB,CACJQ,QAAS,OACTE,WAAY,SACZD,eAAgB,WAEhB,4BAA6B,CAC3BD,QAAS,WAnHc,8BAsHZ,CACb,gBAAiB,CACf,OAAQ,CACNnB,MAAO,cAzHc,gCA6HV,CACf,gBAAiB,CACf,OAAQ,CACNA,MAAO,cAhIc,kCAoIR,CACjB,OAAQ,CACNA,MAAO,WAET,OAAQ,CACNA,MAAO,WAET,eAAgB,CACdyJ,YAAa,cACbC,gBAAiB,WAEnB,WAAY,CACVvI,QAAS,UAhJc,KAoJvBwI,EAAa,CACjB,CACEC,OAAQ,cACRC,SAAU,MACVC,UAAW,gBACXC,UAAW,kBACXC,SAAU,iBACVC,gBAAiB,mBACjBC,OAAQ,QAEV,CACEN,OAAQ,cACRC,SAAU,MACVC,UAAW,gBACXC,UAAW,kBACXC,SAAU,iBACVC,gBAAiB,mBACjBC,OAAQ,QAEV,CACEN,OAAQ,cACRC,SAAU,MACVC,UAAW,gBACXC,UAAW,kBACXC,SAAU,iBACVC,gBAAiB,mBACjBC,OAAQ,QAEV,CACEN,OAAQ,cACRC,SAAU,MACVC,UAAW,gBACXC,UAAW,kBACXC,SAAU,iBACVC,gBAAiB,mBACjBC,OAAQ,SAyjBGC,UArjBf,WACE,MAA0B5H,IAAMC,SAAS,GAAzC,mBAIMF,GAJN,UAIgBP,KAChB,EAAkCQ,IAAMC,SAAS,MAAjD,mBAAO4H,EAAP,KAAkBC,EAAlB,KACA,EAAkD7H,qBAAlD,mBAA0B8H,GAA1B,WACA,EAA4B9H,mBAAS,UAArC,mBAAO+H,EAAP,KAAeC,EAAf,KACA,EAA4ChI,qBAA5C,mBAAOiI,EAAP,KAAuBC,EAAvB,KACA,EAA8ClI,mBAAS,IAAvD,mBAAwBmI,GAAxB,WACA,EAAkCnI,qBAAlC,oBAAkBoI,IAAlB,aACA,GAAkCpI,qBAAlC,qBAAkBqI,IAAlB,aACQC,GAAYC,cAAZD,QACFE,GAAOC,qBAAWC,KAClBC,GAAUpG,cAEhB,GAA8BvC,mBAAS,IAAvC,qBAAgB4I,IAAhB,aACA,GAA8B5I,mBAAS,IAAvC,qBAAgB6I,IAAhB,aACA,GAAgC7I,mBAAS,IAAzC,qBAAiB8I,IAAjB,aACA,GAA8B9I,mBAAS,IAAvC,qBAAgB+I,IAAhB,aACMC,GAAgB,uCAAG,4BAAA1I,EAAA,+EAEH2I,IAAM,CACtBC,OAAQ,MACRC,IAAKC,IAAUC,UACfC,QAAS,CACPC,MACEC,eAAeC,QAAQ,UACvBC,aAAaD,QAAQ,0BARN,OAWQ,MATvBE,EAFe,QAWb9J,KAAK+J,cAEXvB,GAAasB,EAAI9J,KAAKgK,QAbH,gDAiBrBhJ,QAAQC,IAAR,MAjBqB,yDAAH,qDAoBhBgJ,GAAY,uCAAG,8BAAAxJ,EAAA,+EAEC2I,IAAM,CACtBC,OAAQ,MACRC,IAAKC,IAAUW,MACfT,QAAS,CACPC,MACEC,eAAeC,QAAQ,UACvBC,aAAaD,QAAQ,0BARV,OAWY,MATvBE,EAFW,QAWT9J,KAAK+J,eAEPI,EAAOL,EAAI9J,KAAKgK,OACpBzB,GAAY,OAAC4B,QAAD,IAACA,OAAD,EAACA,EAAMC,YAdJ,gDAkBjBpJ,QAAQC,IAAR,MAlBiB,yDAAH,qDAsBZoJ,GAAe,uCAAG,4BAAA5J,EAAA,+EAEF2I,IAAM,CACtBC,OAAQ,OACRC,IAAKC,IAAUe,aACfb,QAAS,CACPC,MACEC,eAAeC,QAAQ,UACvBC,aAAaD,QAAQ,0BARP,OAWS,MATvBE,EAFc,QAWZ9J,KAAK+J,eACX1B,EAAkByB,EAAI9J,KAAKgK,QAC3B1B,EAAmBwB,EAAI9J,KAAKgK,OAAOO,OAbjB,gDAgBpBvJ,QAAQC,IAAR,MAhBoB,yDAAH,qDAyGrB,OAtFAC,qBAAU,WACJuH,IAAWE,GAAK6B,UAClBH,KACAJ,KACAd,QAED,CAACV,GAASE,GAAK6B,UAClBtJ,qBAAU,WACR,IACE,IAAMuJ,EAAM,IAAIC,UAAUC,KAqE1B,OApEAF,EAAIG,OAAS,WAQXH,EAAII,KAAKC,KAAKC,UAPK,CACjBC,OAAQ,mCACRC,UAAW,MACXC,QAAS,OACTC,QAAS,QAIXV,EAAIW,UAAJ,uCAAgB,WAAOC,GAAP,eAAA5K,EAAA,sDAEK,qBAAf4K,EAAMrL,OACJsL,EAASR,KAAKS,MAAMF,EAAMrL,MAC9BgB,QAAQC,IAAI,kBAAmBqK,GAC/BvC,GAAWuC,IALC,2CAAhB,sDAeAb,EAAII,KAAKC,KAAKC,UANM,CAClBC,OAAQ,mCACRC,UAAW,MACXC,QAAS,OACTC,QAAS,QAGXV,EAAIW,UAAJ,uCAAgB,WAAOC,GAAP,eAAA5K,EAAA,sDAEK,qBAAf4K,EAAMrL,OACJsL,EAASR,KAAKS,MAAMF,EAAMrL,MAG9BgJ,GAAWsC,IANC,2CAAhB,sDAgBAb,EAAII,KAAKC,KAAKC,UAPM,CAClBC,OAAQ,mCACRC,UAAW,OACXC,QAAS,OACTC,QAAS,QAIXV,EAAIW,UAAJ,uCAAgB,WAAOC,GAAP,eAAA5K,EAAA,sDAEK,qBAAf4K,EAAMrL,OACJsL,EAASR,KAAKS,MAAMF,EAAMrL,MAE9BiJ,GAAYqC,IALA,2CAAhB,sDAgBAb,EAAII,KAAKC,KAAKC,UAPM,CAClBC,OAAQ,mCACRC,UAAW,MACXC,QAAS,OACTC,QAAS,QAIXV,EAAIW,UAAJ,uCAAgB,WAAOC,GAAP,eAAA5K,EAAA,sDAEK,qBAAf4K,EAAMrL,OACJsL,EAASR,KAAKS,MAAMF,EAAMrL,MAE9BkJ,GAAWoC,IALC,2CAAhB,uDASK,WACLb,EAAIe,SAEN,MAAOC,GACPzK,QAAQC,IAAI,MAAOwK,OAKrB,oCACE,kBAACtO,EAAA,EAAD,CAAME,MAAM,aAGV,kBAACsE,EAAA,EAAD,CAAKJ,UAAWtB,EAAQwG,WAMtB,kBAAC/C,EAAD,MAEA,kBAAC/B,EAAA,EAAD,CAAKgB,GAAI,EAAGpB,UAAWtB,EAAQyL,eAC7B,kBAACtI,EAAA,EAAD,CAAOC,UAAW,EAAGzB,MAAO,CAAE/D,QAAS,SACrC,kBAAC8D,EAAA,EAAD,CACEiC,MAAM,OACNL,GAAI,EACJhC,UAAU,kCAEV,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACA,kBAACD,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CAAEjE,MAAO,uBAAwBiJ,OAAQ,YAFlD,SAOF,kBAAC+E,EAAA,EAAD,CAAgB/J,MAAO,CAAE3C,aAAc,SACrC,kBAAC2M,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACvK,EAAA,EAAD,CACEM,MAAO,CAAE9B,gBAAiB,wBAE1B,kBAAC0B,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,CAAWI,MAAO,CAAEpD,SAAU,SAA9B,aAGA,kBAACgD,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,CAAWI,MAAO,CAAEK,UAAW,WAA/B,oBAGA,kBAACT,EAAA,EAAD,CAAWI,MAAO,CAAEK,UAAW,WAA/B,aAIA,kBAACT,EAAA,EAAD,iBAGJ,kBAACsK,EAAA,EAAD,KACGxE,IAAU,OACTA,QADS,IACTA,OADS,EACTA,EAAYyE,KAAI,SAAC/L,EAAMgM,GACrB,OACE,kBAAC1K,EAAA,EAAD,CAAUC,UAAWtB,EAAQrC,MAC3B,kBAAC4D,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,OAAhC,OAEG1B,QAFH,IAEGA,OAFH,EAEGA,EAAMuH,QAET,kBAAC/F,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CACEJ,UAAU,eACVK,MAAO,CAAE5C,WAAY,aAErB,kBAAC6C,EAAA,EAAD,CACEC,IAAI,uBACJrD,MAAM,OACNJ,OAAO,SAPX,OAUE,kBAAC0D,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CAAEjE,MAAO,wBAFlB,OAIGqC,QAJH,IAIGA,OAJH,EAIGA,EAAMwH,UAdX,iBAmBF,kBAAChG,EAAA,EAAD,CAAWI,MAAO,CAAEqK,cAAe,eAChC,IADH,OAEGjM,QAFH,IAEGA,OAFH,EAEGA,EAAMyH,WAET,kBAACjG,EAAA,EAAD,CAAWI,MAAO,CAAEqK,cAAe,eAChC,IADH,OAEGjM,QAFH,IAEGA,OAFH,EAEGA,EAAM0H,WAET,kBAAClG,EAAA,EAAD,CACEI,MAAO,CACLjE,MAAO,kBACPsE,UAAW,WAGZ,IANH,OASA,kBAACT,EAAA,EAAD,CAAWI,MAAO,CAAEK,UAAW,WAA/B,yBAMA,kBAACT,EAAA,EAAD,CAAWI,MAAO,CAAEjE,MAAO,oBACxB,IADH,OAEGqC,QAFH,IAEGA,OAFH,EAEGA,EAAM6H,iBAiCR,OAAdO,QAAc,IAAdA,OAAA,EAAAA,EAAgBmC,KAAK2B,QAAS,GAC7B,kBAACvK,EAAA,EAAD,CACEiC,MAAM,QACNrC,UAAU,UACVoB,GAAI,EACJwJ,QAAS,kBAAMrD,GAAQsD,KAAK,kBAE5B,kBAACrK,EAAA,EAAD,CAAYC,QAAQ,SAApB,mBAGA,kBAAC,IAAD,SAiBR,kBAACL,EAAA,EAAD,CAAKgB,GAAI,EAAGpB,UAAWtB,EAAQoM,iBAC7B,kBAACjJ,EAAA,EAAD,CAAOC,UAAW,EAAGzB,MAAO,CAAE/D,QAAS,SACrC,kBAAC8D,EAAA,EAAD,CACEiC,MAAM,OACNL,GAAI,EACJhC,UAAU,kCAEV,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBACA,kBAACD,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CAAEjE,MAAO,uBAAwBiJ,OAAQ,YAFlD,SAOF,kBAAC+E,EAAA,EAAD,CAAgB/J,MAAO,CAAE3C,aAAc,SACrC,kBAAC2M,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACvK,EAAA,EAAD,CACEM,MAAO,CAAE9B,gBAAiB,0BAE1B,kBAAC0B,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,CAAWI,MAAO,CAAEpD,SAAU,SAA9B,aAGA,kBAACgD,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,mBAEA,kBAACA,EAAA,EAAD,CAAWI,MAAO,CAAEK,UAAW,WAA/B,oBAGA,kBAACT,EAAA,EAAD,CAAWI,MAAO,CAAEK,UAAW,WAA/B,aAGA,kBAACT,EAAA,EAAD,iBAGJ,kBAACsK,EAAA,EAAD,KACGQ,MAAkB,OACjBA,UADiB,IACjBA,SADiB,EACjBA,IAAoBP,KAAI,SAAC/L,EAAMgM,GAC7B,GACkB,OAAhBhM,EAAKuM,SAGW,MAAhBvM,EAAKuM,SACW,QAAhBvM,EAAKuM,QAIP,OACE,oCACE,kBAAC,EAAD,CAAmBvM,KAAMA,YAmEtCsM,KAAsBA,IAAmBJ,OAAS,IACjD,kBAACvK,EAAA,EAAD,CAAKiC,MAAM,QAAQrC,UAAU,UAAUoB,GAAI,GACzC,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,SAApB,mBAEA,kBAAC,IAAD,SAgBR,kBAACL,EAAA,EAAD,CAAKJ,UAAWtB,EAAQuM,kBAAmBjJ,GAAI,GAC7C,kBAACH,EAAA,EAAD,CAAOC,UAAW,EAAGzB,MAAO,CAAE/D,QAAS,SACrC,kBAAC+E,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGE,GAAI,GAAID,GAAI,EAAGU,MAAM,QACrC,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBAEF,kBAACY,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGE,GAAI,GAAID,GAAI,EAAGU,MAAM,SACrC,kBAACjC,EAAA,EAAD,CAAKJ,UAAU,cACb,kBAAC+B,EAAA,EAAD,CACEtB,QAAQ,YACRyD,KAAK,QACL9H,MAA4B,UAC5BiE,MAAO,CAAEQ,YAAa,OAAQ5D,SAAU,SACxC2N,QAAS,kBAAMhE,EAAU,YAL3B,eASA,kBAAC7E,EAAA,EAAD,CACEtB,QAAQ,WACRyD,KAAK,QACL7D,MAAO,CAAEO,WAAY,OAErBxE,MAA4B,UAC5BwO,QAAS,kBAAMhE,EAAU,YAN3B,qBAYJ,kBAACvF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,IACb,kBAACxB,EAAA,EAAD,CAAKJ,UAAU,SACb,kBAACI,EAAA,EAAD,CAAKJ,UAAU,aACZ,IACD,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,MACjB,IACU,UAAVkG,EAAqB,SAAW,cAGrC,kBAACvG,EAAA,EAAD,CAAKgB,GAAI,EAAGlE,MAAM,QAWhB,kBAAC,EAAD,CAAWyJ,QAAQ,UAU/B,kBAACuE,EAAA,EAAD,CACEjG,GAAG,cACHkG,SAAU3E,EACV4E,aAAW,EACXpL,UAAWtB,EAAQ2M,aACnBC,KAAMC,QAAQ/E,GACdgF,QAAS,kBAAM/E,EAAa,QAE5B,kBAACgF,EAAA,EAAD,CACEb,QAAS,WACPnE,EAAa,MACbC,MAHJ,MARF,OAgBGgF,UAhBH,IAgBGA,SAhBH,EAgBGA,IAAiBlB,KAAI,SAAC/L,EAAMkN,GAC3B,OACE,kBAACF,EAAA,EAAD,CACEb,QAAS,WACPnE,EAAa,MACbC,EAAqBjI,IAEvBmN,IAAKD,GAEJlN,EAAKiE","file":"static/js/24.4c32e852.chunk.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nexport default function Page(props) {\n  const { title, children } = props;\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div>{children}</div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, makeStyles, Paper } from \"@material-ui/core\";\nimport Chart from \"react-apexcharts\";\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainBox: {\n    \"& text\": {\n      fill: \"#fff !important\",\n    },\n\n    \"& .apexcharts-menu \": {\n      color: \"#000 !important\",\n    },\n  },\n}));\n\nexport default function MetricsChart({ graphData, profit }) {\n  const classes = useStyles();\n  const [priceLists, setPriceList] = useState([]);\n  const [months, setMonths] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  // console.log(graphData, \"profit==========>>>>>>>>>>>>>>>>>\", profit);\n  // const PriceData =\n  //   graphData.graphData && graphData.graphData.filter((month) => month.month);\n  // console.log(\"PriceData======\", PriceData);\n  const graphArr = async () => {\n    if (graphData) {\n      // let PriceList = [];\n      const list = graphData;\n      if (list.length > 0) {\n        // const add =\n        const addMonths = await Promise.all(\n          list.map(async (listData) => {\n            // console.log(listData.month);\n            // const monthss = `${listData.month} (${listData.year.slice(2)})`;\n            // console.log(monthss);\n            return listData.month;\n          })\n        );\n        setMonths(addMonths);\n        // console.log(\"add--------->\", addMonths);\n        const addPrice = await Promise.all(\n          list.map(async (listData) => {\n            // console.log(listData.month);\n            return listData.totalPrice;\n          })\n        );\n        const totalFalseTransaction = await Promise.all(\n          list.map(async (listData) => {\n            // console.log(listData.month);\n            return listData.totalFalseTransaction;\n          })\n        );\n        // console.log(\"add--------->\", addPrice);\n        if (profit) {\n          setPriceList(addPrice);\n        } else {\n          setPriceList(totalFalseTransaction);\n        }\n        setLoader(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    graphArr();\n  }, [graphData, profit]);\n\n  const options = {\n    series: [\n      {\n        name: \"Desktops\",\n        data: [3, 5, 2, 5, 6, 2, 7, 2],\n        // data: priceLists,\n      },\n    ],\n    options: {\n      chart: {\n        height: 300,\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n        categories: {\n          color: \"#fff\",\n          fontSize: \"15px !important\",\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"straight\",\n      },\n      title: {\n        text: \"PROFIT PERCENTAGE\",\n        align: \"center\",\n        color: \"#fff\",\n        fill: \"#fff !important\",\n      },\n      fill: {\n        // text: \"PROFIT PERCENTAGE\",\n        colors: [\"#F44336\", \"#E91E63\", \"#9C27B0\"],\n      },\n      grid: {\n        row: {\n          colors: [\"#D5D7DB\", \"transparent\"], // takes an array which will be repeated on columns\n          opacity: 0.5,\n        },\n      },\n      xaxis: {\n        categories: [\n          \"jan\",\n          \"fab\",\n          \"mar\",\n          \"apr\",\n          \"may\",\n          \"jun\",\n          \"july\",\n          \"aug\",\n          \"sep\",\n          \"oct\",\n          \"nov\",\n          \"dec\",\n        ],\n        // categories: months,\n      },\n      noData: {\n        text: \"Loading...\",\n        color: \"#fff\",\n      },\n    },\n  };\n\n  // console.log(\"options.options,\", options.options);\n  // console.log(\"options.series,\", options.series);\n  return (\n    <Box className={classes.mainBox}>\n      <Paper\n        style={{\n          paddingTop: \"16px\",\n          background: \"#fff\",\n          boxShadow: \"0 25px 70px rgba(0,0,0,.07)\",\n          // color: \"#fff\"\n        }}\n      >\n        {loader && options?.options?.length == 0 ? (\n          <Box\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"cnter\",\n              width: \"100%\",\n            }}\n          >\n            <ButtonCircularProgress />\n          </Box>\n        ) : (\n          <Chart\n            options={options.options}\n            series={options.series}\n            style={{ fill: \"#fff\" }}\n            type=\"line\"\n            height={300}\n          />\n        )}\n      </Paper>\n    </Box>\n  );\n}\n","import { UserContext } from 'src/context/User'\nimport { Box, Container, makeStyles, Typography, Button } from '@material-ui/core'\nimport React, { useContext } from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    root: { padding: \"70px 0px 0px\" },\n    bannerimg: {\n        overflow: \"hidden\",\n        background: \"rgba(0,0,0,0.7)\",\n        position: \"relative\",\n        backgroundPosition: \"center !important\",\n        backgroundRepeat: \" no-repeat !important\",\n        backgroundSize: \"100% !important\",\n        height: \"260px\",\n        borderRadius: \"45px\",\n        \"@media(max-width:1010px)\": {\n            height: \"140px\",\n            borderRadius: \"25px\",\n        },\n\n        \"& img\": {\n            minHeight: \"100%\",\n            minWidth: \"100%\",\n            height: \"auto\",\n            width: \"auto\",\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n        },\n    },\n    headbox2: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        padding: \"20px 20px\",\n        marginBottom: \"15px\",\n        \"@media(max-width:767px)\": {\n            display: \"block\",\n            padding: \"0 10px\",\n        },\n    },\n    text1: {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& h4\": {\n            fontStyle: \"normal\",\n            fontWeight: \"bold\",\n            fontSize: \"40px\",\n            lineHeight: \"130%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            \"@media(max-width:1010px)\": {\n                fontSize: \"30px\",\n            },\n            \"@media(max-width:930px)\": {\n                fontSize: \"25px\",\n            },\n        },\n        \"& h5\": {\n            fontStyle: \"normal\",\n            fontWeight: \"600\",\n            fontSize: \"14px\",\n            lineHeight: \"130%\",\n            color: \"rgba(255, 255, 255, 0.5)\",\n        },\n    },\n    profileimg: {\n        marginTop: \"-140px\",\n        overflow: \"hidden\",\n        backgroundPosition: \"center !important\",\n        backgroundSize: \"100% !important\",\n        backgroundRepeat: \" no-repeat !important\",\n        background: \"rgba(0 , 0, 0, 1)\",\n        width: \"200px\",\n        height: \"200px\",\n        borderRadius: \"45px\",\n        zIndex: \"1\",\n        \"@media(max-width:800px)\": {\n            marginTop: \"-35px\",\n            width: \"95px\",\n            height: \"95px\",\n            borderRadius: \"25px\",\n            zIndex: 9,\n        },\n        \"& img\": {\n            minHeight: \"100%\",\n            minWidth: \"100%\",\n            height: \"auto\",\n            width: \"auto\",\n            borderRadius: \"50%\",\n        },\n    },\n\n}))\n\nexport default function Profile() {\n    const user = useContext(UserContext)\n    const classes = useStyles()\n    return (\n        <Box className={classes.root}>\n            <Container>\n\n                <Box\n                    className={classes.bannerimg}\n                >\n                    <img\n                        src={\n                            user?.userData?.coverPic\n                                ? user?.userData?.coverPic\n                                : \"/images/background.png\"\n                        }\n                        alt=\"\"\n                    />\n                </Box>\n                <Box className={classes.headbox2}>\n                    <Box\n                        style={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                        }}\n                    >\n                        <Box\n                            style={{\n                                background:\n                                    \"url(\" +\n                                    `${user?.userData?.profilePic\n                                        ? user?.userData?.profilePic\n                                        : \"/images/about7.png\"\n                                    }` +\n                                    \")\",\n                                backgroundColor: \"#d7aaf0\",\n                                borderRadius: \"100%\",\n                            }}\n                            className={classes.profileimg}\n                        ></Box>\n                        &nbsp;&nbsp;\n                        <Box className={classes.text1}>\n                            <Box>\n                                <Typography variant=\"h4\">\n                                    {user?.userData?.name}\n                                    <span\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                            color: \"#000\",\n                                            textTransform: \"uppercase\"\n                                        }}\n                                    >\n\n\n\n                                    </span>\n                                </Typography>\n                                <Typography variant=\"h5\">{user?.userData?.userName}</Typography>\n                                <Typography variant=\"h5\">{user?.userData?.email}</Typography>\n                                <Typography variant=\"h5\">{user?.userData?.bio}</Typography>\n                                <Typography variant=\"h5\">{user?.userData?.walletAddress}</Typography>\n                            </Box>\n                            &nbsp;\n\n\n                        </Box>\n                    </Box>\n\n\n                </Box>\n\n            </Container>\n        </Box>\n    )\n}\n","import React, { useEffect } from \"react\";\nimport {\n  makeStyles,\n  TableRow,\n  TableCell,\n  Avatar,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { CheckPriceinDollor } from \"./PriceChecker\";\nimport { ShshiSwapCheckPriceinDollor } from \"./SushiSwapPriceCheck\";\nimport ERC20ABI from \"src/ABI/IERC20ABI.json\";\nimport {\n  APITokenPriceHandler,\n  getWeb3ContractObject,\n  mainnetRPCURL1,\n  GenerateEstimateGas,\n} from \"src/utils\";\nimport { ShibaSwapCheckPriceinDollor } from \"./ShibaswapPriceChecker\";\nimport { UniswapFactory, ShushiswapFactory } from \"../../utils/index\";\nimport { wait } from \"@testing-library/react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#ffffff\",\n    },\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#ffffff\",\n    },\n  },\n}));\nconst PriceCheckerTable = (props) => {\n  const { data } = props;\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(2);\n  const [UniwapPrice, setUniwapPrice] = React.useState(0);\n  const [ShushiswapPrice, setShushiswapPrice] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  // console.log(\"data-------->>>data\", data.tokenM);\n  const priceCheck = async () => {\n    try {\n      const PriceAPI = await APITokenPriceHandler(data.tokenM, UniswapFactory);\n      setUniwapPrice(PriceAPI);\n\n      // await PriceAPI.wait();\n      // console.log(\"PriceAPIShushiSwap ----- PriceAPI\", PriceAPI);\n      const PriceAPIShushiSwap = await APITokenPriceHandler(\n        data.tokenM,\n        ShushiswapFactory\n      );\n\n      console.log(\"PriceAPIShushiSwap -----\", PriceAPIShushiSwap);\n\n      setShushiswapPrice(PriceAPIShushiSwap);\n      // const Price = await CheckPriceinDollor(\"Uniswap\", data.tokenM);\n      // // console.log(\"Price\", Price);\n      // // setUniwapPrice(Price);\n      // const ShushiswpPrice = await ShibaSwapCheckPriceinDollor(\n      //   \"ShibaSwap\",\n      //   data.tokenM\n      // );\n      // console.log(\"ShushiswpPrice\", ShushiswpPrice);\n      // setShushiswapPrice(ShushiswpPrice);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    priceCheck();\n  }, []);\n  useEffect(() => {\n    // priceCheck();\n    const timer = setTimeout(() => {\n      priceCheck();\n    }, 5000);\n\n    return () => {\n      // console.log(\" ---- chatId ---- chatId timer 3\", timer);\n      clearTimeout(timer);\n    };\n  });\n  return (\n    <TableRow className={classes.root}>\n      <TableCell component=\"th\" scope=\"row\">\n        0*5566TYTY6767767\n      </TableCell>\n      <TableCell>\n        <Box className=\"displayStart\" style={{ alignItems: \"flex-end\" }}>\n          <Avatar src=\"/images/bnb_icon.svg\" width=\"30px\" height=\"30px\" />\n          &nbsp;\n          <Typography variant=\"h6\" style={{ color: \"rgba(61, 61, 61, 1)\" }}>\n            BTC\n          </Typography>\n          &nbsp; Bitcoin\n        </Box>\n      </TableCell>\n      <TableCell>\n        {\" \"}\n        {/* {CheckPriceinDollor(\n          \"Uniswap\",\n          \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n        )} */}\n        Uniswap $1,100{UniwapPrice}\n      </TableCell>\n      <TableCell>\n        {/* {data?.ExchangeB} */}\n        Sushiswap $1,250{ShushiswapPrice}\n      </TableCell>\n      {/* <TableCell>{data?.DateTime}</TableCell> */}\n      <TableCell\n        style={{ color: \"rgba(243, 109, 54, 1)\", textAlign: \"center\" }}\n      >\n        {/* {\" \"}\n        {UniwapPrice && ShushiswapPrice && \"$\"}\n        {UniwapPrice - ShushiswapPrice > 0\n          ? UniwapPrice - ShushiswapPrice\n          : ShushiswapPrice - UniwapPrice} */}\n        $43 {UniwapPrice}\n      </TableCell>\n      <TableCell style={{ textAlign: \"center\" }}>\n        {/* {data?.ExchangeB} */}\n        29-Nov-2023, 09:23 PM\n      </TableCell>\n      <TableCell style={{ color: \"rgba(243, 109, 54, 1)\" }}>\n        {/* {\" \"}\n        {UniwapPrice && ShushiswapPrice && \"$\"}\n        {UniwapPrice - ShushiswapPrice > 0\n          ? UniwapPrice - ShushiswapPrice\n          : ShushiswapPrice - UniwapPrice} */}\n        $45 {UniwapPrice}\n      </TableCell>\n      {/* <TableCell> {UniwapPrice - ShushiswapPrice}</TableCell> */}\n    </TableRow>\n  );\n};\n\nexport default PriceCheckerTable;\n","import {\n  ChainId,\n  Token,\n  Fetcher,\n  Route,\n  Trade,\n  TradeType,\n  TokenAmount,\n  WETH,\n} from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\n//   import {\n//     ChainId,\n//     Token,\n//     Route,\n//     Trade,\n//     TradeType,\n//     Pair,\n//     CurrencyAmount,\n//   } from \"@sushiswap/sdk\";\n//   import abi from \"./IUniswapv2Pair.json\";\n//   import {\n//     ChainId,\n//     Token,\n//     Fetcher,\n//     Route,\n//     Trade,\n//     TradeType,\n//     TokenAmount,\n//   } from \"@shibaswap/sdk\";\n\nconst provider = new ethers.providers.WebSocketProvider(\n  \"wss://mainnet.infura.io/ws/v3/2f2312e7890d42f5b0ba6e29ef50674d\"\n);\n\nexport const CheckPriceinDollor = async (exchange, tokenAddress) => {\n  try {\n    console.log(\"----WETH\", tokenAddress);\n    let amount;\n    if (exchange == \"Uniswap\") {\n      const USDC = new Token(\n        ChainId.MAINNET,\n        \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n        6\n      );\n      // console.log(\"----WETH\", USDC);\n      // const token = new Token(ChainId.MAINNET, tokenAddress, toDecimal);\n      const u_tokenAIn = await Fetcher.fetchTokenData(\n        ChainId.MAINNET,\n        tokenAddress,\n        provider\n      );\n      // console.log(\"----WETH\", WETH);\n\n      // const USDCWETHPair = await Fetcher.fetchPairData(\n      //   USDC,\n      //   WETH[ChainId.MAINNET]\n      // );\n      const USDCTokenAddressPair = await Fetcher.fetchPairData(\n        USDC,\n        u_tokenAIn\n      );\n      console.log(\"u_tokenAIn====----->>>\", u_tokenAIn.decimals);\n      // console.log(\"----WETH\", USDCWETHPair);\n      // const TokenPriceUSDCPair = await Fetcher.fetchPairData(USDCTokenAddressPair, USDC);\n\n      // console.log(\"----WETH\", TokenPriceUSDCPair);\n      // const route = new Route(\n      //   [USDCWETHPair, TokenPriceUSDCPair],\n      //   WETH[ChainId.MAINNET]\n      // );\n      const route = new Route([USDCTokenAddressPair], u_tokenAIn);\n      const amount = 1;\n      const trade = new Trade(\n        route,\n        new TokenAmount(\n          u_tokenAIn,\n          ethers.utils.parseUnits(amount.toFixed(6), u_tokenAIn.decimals)\n          // BigInt(1e18)\n        ),\n        TradeType.EXACT_INPUT\n      );\n\n      console.log(\"----WETH\", route);\n      console.log(\"----WETH\", trade);\n      console.log(\"----WETH\", trade.executionPrice.toSignificant(6));\n      // console.log(route.midPrice.toSignificant(6)); // 202.081\n      // console.log(route.midPrice.invert().toSignificant(6)); // 0.00494851\n      return trade.executionPrice.toSignificant(6);\n      // return route.midPrice.invert().toSignificant(6);\n      // const tokenPair = await Fetcher.fetchPairData(TokenPrice, USDC, provider);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { ethers } from \"ethers\";\nimport {\n  ChainId,\n  Token,\n  Route,\n  Trade,\n  TradeType,\n  Pair,\n  CurrencyAmount,\n  // Fetcher,\n} from \"@sushiswap/sdk\";\nimport IUniswapv2Pair from \"src/ABI/IUniswapv2Pair.json\";\nimport { Fetcher } from \"@shibaswap/sdk\";\n\nconst provider = new ethers.providers.WebSocketProvider(\n  \"wss://mainnet.infura.io/ws/v3/2f2312e7890d42f5b0ba6e29ef50674d\"\n);\n\nexport const ShushiSwapCheckPriceinDollor = async (\n  exchange,\n  tokenAddress\n  // toDecimal,\n  // symbol\n) => {\n  try {\n    console.log(\"----WETH\", tokenAddress);\n    let amount;\n    // if (exchange == \"ShibaSwap\") {\n    //   const USDC = new Token(\n    //     ChainId.MAINNET,\n    //     \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n    //     6\n    //   );\n    //   const u_tokenAIn = await Fetcher.fetchTokenData(\n    //     ChainId.MAINNET,\n    //     tokenAddress,\n    //     provider\n    //   );\n    //   const USDCTokenAddressPair = await Fetcher.fetchPairData(\n    //     USDC,\n    //     u_tokenAIn\n    //   );\n    //   console.log(\"u_tokenAIn====----->>>\", u_tokenAIn.decimals);\n    //   const route = new Route([USDCTokenAddressPair], u_tokenAIn);\n    //   const amount = 1;\n    //   const trade = new Trade(\n    //     route,\n    //     new TokenAmount(\n    //       u_tokenAIn,\n    //       ethers.utils.parseUnits(amount.toFixed(6), u_tokenAIn.decimals)\n    //       // BigInt(1e18)\n    //     ),\n    //     TradeType.EXACT_INPUT\n    //   );\n\n    //   console.log(\"----WETH\", route);\n    //   console.log(\"----WETH\", trade);\n    //   console.log(\"----WETH\", trade.executionPrice.toSignificant(6));\n    //   return trade.executionPrice.toSignificant(6);\n    // }\n    if (exchange == \"ShushiSwap\") {\n      const USDC = new Token(\n        ChainId.MAINNET,\n        \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n        6,\n        \"USDT\"\n      );\n      // const NewsTokenAddress = new Token(\n      //   ChainId.MAINNET,\n      //   tokenAddress,\n      // );\n      // console.log(\n      //   NewsTokenAddress,\n      //   \"USDC ---  shushiswpPrice----------->\",\n      //   USDC\n      // );\n\n      const NewsTokenAddress = await Fetcher.fetchTokenData(\n        ChainId.MAINNET,\n        tokenAddress,\n        provider\n      );\n      console.log(\n        \"USDC ---  shushiswpPrice-----------> NewsTokenAddress \",\n        NewsTokenAddress\n      );\n      const pairAddress = Pair.getAddress(USDC, NewsTokenAddress);\n      console.log(\"shushiswap ---  shushiswpPrice----------->\", pairAddress);\n\n      const uniV2PairContract = new ethers.Contract(\n        pairAddress,\n        IUniswapv2Pair,\n        provider\n      );\n      console.log(\n        \"uniV2PairContract ---  shushiswpPrice----------->\",\n        uniV2PairContract\n      );\n      const reserves = await uniV2PairContract.getReserves();\n      console.log(\"reserves ---  shushiswpPrice----------->\", reserves);\n\n      const token0Address = await uniV2PairContract.token0();\n      const token1Address = await uniV2PairContract.token1();\n      const token0 = [USDC, NewsTokenAddress].find(\n        (token) => token.address === token0Address\n      );\n      const token1 = [USDC, NewsTokenAddress].find(\n        (token) => token.address === token1Address\n      );\n\n      const pairs = new Pair(\n        CurrencyAmount.fromRawAmount(token0, reserves.reserve0.toString()),\n        CurrencyAmount.fromRawAmount(token1, reserves.reserve1.toString())\n      );\n      console.log(\"pairs ---  shushiswpPrice----------->\", pairs);\n      return pairs;\n    }\n  } catch (error) {\n    // try {\n    //   console.log(\"----WETH\", tokenAddress);\n    //   let amount;\n    //   if (exchange == \"Uniswap\") {\n    //     const USDC = new Token(\n    //       ChainId.MAINNET,\n    //       \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    //       6\n    //     );\n    //     console.log(\"----WETH\", USDC);\n    //     const TokenPrice = new Token(ChainId.MAINNET, tokenAddress, 18);\n    //     console.log(\"----WETH\", WETH);\n\n    //     const USDCWETHPair = await Fetcher.fetchPairData(\n    //       USDC,\n    //       WETH[ChainId.MAINNET]\n    //     );\n    //     console.log(\"----WETH\", USDCWETHPair);\n    //     const TokenPriceUSDCPair = await Fetcher.fetchPairData(TokenPrice, USDC);\n\n    //     console.log(\"----WETH\", TokenPriceUSDCPair);\n    //     const route = new Route(\n    //       [USDCWETHPair, TokenPriceUSDCPair],\n    //       WETH[ChainId.MAINNET]\n    //     );\n\n    //     console.log(\"----WETH\", route);\n    //     console.log(route.midPrice.toSignificant(6)); // 202.081\n    //     console.log(route.midPrice.invert().toSignificant(6)); // 0.00494851\n    //     return route.midPrice.invert().toSignificant(6);\n    //     // const tokenPair = await Fetcher.fetchPairData(TokenPrice, USDC, provider);\n    //   }\n    // }\n    console.log(\"error ---  shushiswpPrice----------->\", error);\n  }\n};\n","// import {\n//     ChainId,\n//     Token,\n//     Fetcher,\n//     Route,\n//     Trade,\n//     TradeType,\n//     TokenAmount,\n//     WETH,\n//   } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\n// import {\n//   ChainId,\n//   Token,\n//   Route,\n//   Trade,\n//   TradeType,\n//   Pair,\n//   CurrencyAmount,\n// } from \"@sushiswap/sdk\";\n//   import abi from \"./IUniswapv2Pair.json\";\nimport {\n  ChainId,\n  Token,\n  Fetcher,\n  Route,\n  Trade,\n  TradeType,\n  TokenAmount,\n  WETH,\n} from \"@shibaswap/sdk\";\n\nconst provider = new ethers.providers.WebSocketProvider(\n  \"wss://mainnet.infura.io/ws/v3/2f2312e7890d42f5b0ba6e29ef50674d\"\n);\n\nexport const ShibaSwapCheckPriceinDollor = async (exchange, tokenAddress) => {\n  try {\n    console.log(\"----WETH\", tokenAddress);\n    let amount;\n    if (exchange == \"ShibaSwap\") {\n      const USDC = new Token(\n        ChainId.MAINNET,\n        \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n        6\n      );\n      console.log(\"----WETH\", USDC);\n      // const token = new Token(ChainId.MAINNET, tokenAddress, toDecimal);\n      const u_tokenAIn = await Fetcher.fetchTokenData(\n        ChainId.MAINNET,\n        tokenAddress,\n        provider\n      );\n      // console.log(\"----WETH\", WETH);\n\n      // const USDCWETHPair = await Fetcher.fetchPairData(\n      //   USDC,\n      //   WETH[ChainId.MAINNET]\n      // );\n      //   console.log(\"u_tokenAIn====Shibaswap----->>>\", u_tokenAIn);\n      const USDCTokenAddressPair = await Fetcher.fetchPairData(\n        USDC,\n        u_tokenAIn\n      );\n      console.log(\"u_tokenAIn====Shibaswap----->>>\", USDCTokenAddressPair);\n      // console.log(\"----WETH\", USDCWETHPair);\n      // const TokenPriceUSDCPair = await Fetcher.fetchPairData(USDCTokenAddressPair, USDC);\n\n      // console.log(\"----WETH\", TokenPriceUSDCPair);\n      // const route = new Route(\n      //   [USDCWETHPair, TokenPriceUSDCPair],\n      //   WETH[ChainId.MAINNET]\n      // );\n      const route = new Route([USDCTokenAddressPair], u_tokenAIn);\n      const amount = 1;\n      const trade = new Trade(\n        route,\n        new TokenAmount(\n          u_tokenAIn,\n          ethers.utils.parseUnits(amount.toFixed(6), u_tokenAIn.decimals)\n          // BigInt(1e18)\n        ),\n        TradeType.EXACT_INPUT\n      );\n\n      console.log(\"----WETH\", route);\n      console.log(\"----WETH\", trade);\n      console.log(\"----WETH\", trade.executionPrice.toSignificant(6));\n      // console.log(route.midPrice.toSignificant(6)); // 202.081\n      // console.log(route.midPrice.invert().toSignificant(6)); // 0.00494851\n      return trade.executionPrice.toSignificant(6);\n      // return route.midPrice.invert().toSignificant(6);\n      // const tokenPair = await Fetcher.fetchPairData(TokenPrice, USDC, provider);\n    }\n  } catch (error) {\n    // try {\n    //   console.log(\"----WETH\", tokenAddress);\n    //   let amount;\n    //   if (exchange == \"Uniswap\") {\n    //     const USDC = new Token(\n    //       ChainId.MAINNET,\n    //       \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    //       6\n    //     );\n    //     console.log(\"----WETH\", USDC);\n    //     const TokenPrice = new Token(ChainId.MAINNET, tokenAddress, 18);\n    //     console.log(\"----WETH\", WETH);\n\n    //     const USDCWETHPair = await Fetcher.fetchPairData(\n    //       USDC,\n    //       WETH[ChainId.MAINNET]\n    //     );\n    //     console.log(\"----WETH\", USDCWETHPair);\n    //     const TokenPriceUSDCPair = await Fetcher.fetchPairData(TokenPrice, USDC);\n\n    //     console.log(\"----WETH\", TokenPriceUSDCPair);\n    //     const route = new Route(\n    //       [USDCWETHPair, TokenPriceUSDCPair],\n    //       WETH[ChainId.MAINNET]\n    //     );\n\n    //     console.log(\"----WETH\", route);\n    //     console.log(route.midPrice.toSignificant(6)); // 202.081\n    //     console.log(route.midPrice.invert().toSignificant(6)); // 0.00494851\n    //     return route.midPrice.invert().toSignificant(6);\n    //     // const tokenPair = await Fetcher.fetchPairData(TokenPrice, USDC, provider);\n    //   }\n    // }\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport {\n  Box,\n  Grid,\n  makeStyles,\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  profilecardBox: {\n    position: \"relative\",\n    \"& h2\": {\n      color: \"rgba(61, 61, 61, 1) !important\",\n      textAlign: \"left\",\n      whiteSpace: \"pre !important\",\n      fontSize: \"25px !important\",\n    },\n    \"& h4\": {\n      fontSize: \"20px\",\n      lineHeight: \"29px\",\n      color: \"rgba(243, 109, 54, 1)\",\n    },\n    \"& .hourButton\": {\n      height: \"40px !important\",\n      marginRight: \"10px\",\n      whiteSpace: \"pre\",\n    },\n    \"& .iconbox\": {\n      borderRadius: \"0px\",\n      width: \"80px\",\n      height: \"80px\",\n      marginLeft: \"30px\",\n      paddingLeft: \"30px\",\n      borderLeft: \"3px solid #f36d33\",\n    },\n    \"& .dashboardinnerpurple\": {\n      \"& .hourButton\": {\n        height: \"40px !important\",\n        marginRight: \"10px\",\n        whiteSpace: \"pre\",\n        border: \"1px solid rgba(65, 22, 67, 1) !important\",\n        color: \"rgba(65, 22, 67, 1) !important\",\n        \"&:hover\": {\n          background: \"rgba(65, 22, 67, 1) !important\",\n          color: \"#fff !important\",\n        },\n      },\n    },\n    \"& .dashboardinner\": {\n      padding: \"20px\",\n      position: \"relative\",\n      zIndex: \"9\",\n      overflow: \"hidden\",\n      //   \"&::after\": {\n      //     \"top\": \"0\",\n      //     \"left\": \"0\",\n      //     \"width\": \"100%\",\n      //     \"height\": \"91%\",\n      //     \"content\": \"''\",\n      //     \"zIndex\": \"-1\",\n      //     \"position\": \"absolute\",\n      //     \"background\": \"#f36d3326\",\n      //     \"borderRadius\": \"0 0px 100px 38px\",\n      //   },\n      \"& .orangeshadeBox\": {\n        position: \"absolute\",\n        top: \"-13px\",\n        left: \"0\",\n        height: \"100%\",\n        width: \"100%\",\n      },\n    },\n  },\n}));\n\nexport default function Profile() {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Box className={classes.profilecardBox} mt={3}>\n      <Grid container spacing={2} style={{ alignItems: \"center\" }}>\n        <Grid item md={6} lg={5} sm={6} xs={12}>\n          <Paper elevation={2} className=\"dashboardinner\">\n            <img\n              src=\"/images/Dashboard/orangeshadebox.png\"\n              className=\"orangeshadeBox\"\n            />\n            <Typography variant=\"h2\" style={{ textAlign: \"left\" }}>\n              Recent Total Profits (USDT)\n            </Typography>\n            <Box className=\"displayStart\" mt={2}>\n              <Button variant=\"outlined\" color=\"primary\" className=\"hourButton\">\n                1 Hour\n              </Button>\n              <Button variant=\"outlined\" color=\"primary\" className=\"hourButton\">\n                1 Hour\n              </Button>\n              <Button variant=\"outlined\" color=\"primary\" className=\"hourButton\">\n                1 Hour\n              </Button>\n            </Box>\n            <Box className=\"displayStart\" mt={2} mb={2}>\n              {\" \"}\n              <Box>\n                <Typography variant=\"h4\" style={{ textAlign: \"left\" }}>\n                  0 (USDT)\n                </Typography>\n                <Typography variant=\"h4\" style={{ textAlign: \"left\" }}>\n                  0 (USDT)\n                </Typography>\n              </Box>\n              <Avatar src=\"/images/Dashboard/eth.png\" className=\"iconbox\" />\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item md={6} lg={5} sm={6} xs={12}>\n          <Paper elevation={2} className=\"dashboardinnerpurple dashboardinner\">\n            <img\n              src=\"/images/Dashboard/purple.svg\"\n              className=\"orangeshadeBox heightpurpleBox\"\n            />\n            <Typography variant=\"h2\" style={{ textAlign: \"left\" }}>\n              Recent Total Profits (USDT)\n            </Typography>\n            <Box className=\"displayStart\" mt={2} mb={2}>\n              <Button variant=\"outlined\" color=\"primary\" className=\"hourButton\">\n                1 Hour\n              </Button>\n              <Button variant=\"outlined\" color=\"primary\" className=\"hourButton\">\n                1 Hour\n              </Button>\n              <Button variant=\"outlined\" color=\"primary\" className=\"hourButton\">\n                1 Hour\n              </Button>\n            </Box>\n            <Box className=\"displayStart\" mt={2} mb={2}>\n              {\" \"}\n              <Box>\n                <Typography\n                  variant=\"h4\"\n                  style={{ textAlign: \"left\", color: \"rgba(65, 22, 67, 1)\" }}\n                >\n                  0 (USDT)\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  style={{ textAlign: \"left\", color: \"rgba(65, 22, 67, 1)\" }}\n                >\n                  0 (USDT)\n                </Typography>\n              </Box>\n              <Avatar\n                src=\"/images/Dashboard/purpleeth.png\"\n                className=\"iconbox\"\n                style={{ borderLeft: \"3px solid rgba(65, 22, 67, 1)\" }}\n              />\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Grid,\n  makeStyles,\n  Typography,\n  Paper,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Profile from \"./Profile\";\nconst useStyles = makeStyles((theme) => ({\n  dashboardcardBox: {\n    position: \"relative\",\n    \"& h6\": {\n      color: \"#00000080\",\n    },\n    \"& .displaySpaceBetween\": {\n      alignItems: \"flex-start\",\n      position: \"relative\",\n      zIndex: \"9\",\n      \"&::before\": {\n        width: \"5px\",\n        height: \"100%\",\n        content: \"''\",\n        zIndex: \"1\",\n        position: \"absolute\",\n        background: \"rgba(65, 22, 67, 1)\",\n        top: \"0\",\n        left: \"0\",\n        borderRadius: \"10px\",\n      },\n    },\n    \"& .exchangeBox\": {\n      \"&::before\": {\n        background: \"rgb(255, 85, 0) !important\",\n      },\n    },\n\n    \"& .iconbox\": {\n      borderRadius: \"0px\",\n      width: \"50px\",\n      height: \"50px\",\n    },\n    \"& .dashboardinner\": {\n      padding: \"20px\",\n    },\n  },\n}));\n\nexport default function DashboardnewCard() {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Box className={classes.dashboardcardBox}>\n      <Grid container spacing={2} style={{ alignItems: \"center\" }}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Paper elevation={2} className=\"dashboardinner\">\n            <Box className=\"displaySpaceBetween\">\n              <Box ml={2} align=\"left\">\n                <Typography variant=\"h6\">Wallet Balance</Typography>\n                <Typography variant=\"h2\">$67.67</Typography>\n              </Box>\n              <Avatar\n                src=\"/images/Dashboard/wallet_icon.svg\"\n                className=\"iconbox\"\n              />\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Paper elevation={2} className=\"dashboardinner\">\n            <Box className=\"displaySpaceBetween exchangeBox\">\n              <Box ml={2} align=\"left\">\n                <Typography variant=\"h6\">Exchange</Typography>\n                <Typography variant=\"h2\">$12</Typography>\n              </Box>\n              <Avatar\n                src=\"/images/Dashboard/exchange.svg\"\n                className=\"iconbox\"\n              />\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Paper elevation={2} className=\"dashboardinner transactionBox\">\n            <Box className=\"displaySpaceBetween\">\n              <Box ml={2} align=\"left\">\n                <Typography variant=\"h6\">Transactions</Typography>\n                <Typography variant=\"h2\">$67.67</Typography>\n              </Box>\n              <Avatar\n                src=\"/images/Dashboard/transaction.svg\"\n                className=\"iconbox\"\n              />\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Paper elevation={2} className=\"dashboardinner\">\n            <Box className=\"displaySpaceBetween exchangeBox\">\n              <Box ml={2} align=\"left\">\n                <Typography variant=\"h6\">Highest Profile</Typography>\n                <Typography variant=\"h2\">4677</Typography>\n              </Box>\n              <Avatar src=\"/images/Dashboard/profile.svg\" className=\"iconbox\" />\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Profile />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  tablemainbox: {\n    \"& .activitysub\": {\n      padding: \"20px\",\n      borderBottom: \"1px solid #3A3939\",\n      \"& svg\": {\n        fontSize: \"20px\",\n      },\n      \"& h5\": {\n        fontWeight: \"600\",\n        marginLeft: \"10px\",\n      },\n    },\n  },\n}));\n\nconst LineChart = () => {\n  const classes = useStyles();\n\n  const [chartData, setChartData] = useState({\n    series: [\n      {\n        name: \"Withdrawal\",\n        data: [31, 40, 28, 51, 42, 109, 100, 31, 40, 28, 51, 42],\n      },\n      //   {\n      //     name: \"Deposit\",\n      //     data: [11, 32, 45, 32, 34, 52, 41, 11, 32, 45, 32, 34],\n      //   },\n    ],\n    options: {\n      chart: {\n        height: 350,\n        type: \"area\",\n        toolbar: {\n          show: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"straight\",\n      },\n      grid: {\n        show: false,\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"dark\",\n          gradientToColors: [\"#A2FF03\"],\n          shadeIntensity: 1,\n          type: \"horizontal\",\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100],\n        },\n      },\n      colors: [\"#411643\"],\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        labels: {\n          colors: \"#411643 \",\n          useSeriesColors: false,\n        },\n      },\n      markers: {\n        size: 2,\n        hover: {\n          size: 3,\n        },\n      },\n      tooltip: {\n        intersect: true,\n        shared: false,\n      },\n\n      yaxis: {\n        show: true,\n        labels: {\n          show: true,\n        },\n        lines: {\n          show: false,\n        },\n        decimalsInFloat: 2,\n      },\n      xaxis: {\n        type: \"date\",\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"Jul\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n          \"Nov\",\n          \"Dec\",\n        ],\n      },\n      tooltip: {\n        x: {\n          format: \"dd/MM/yy HH:mm\",\n        },\n      },\n      fill: {\n        gradient: {\n          shade: \"light\",\n          type: \"vertical\",\n          shadeIntensity: 0.55,\n          gradientToColors: [\n            \"#411643\",\n            \"linear-gradient(180deg, #17565A 0%, rgba(23, 86, 90, 0.00) 100%)\",\n          ],\n          inverseColors: false,\n          opacityFrom: 0.85,\n          opacityTo: 0.55,\n          stops: [0, 100],\n        },\n      },\n    },\n  });\n\n  return (\n    <Box>\n      <Box className={classes.tablemainbox}>\n        <Box p={1}>\n          <div id=\"chart\">\n            <ReactApexChart\n              options={chartData.options}\n              series={chartData.series}\n              type=\"area\"\n              height={350}\n            />\n          </div>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default LineChart;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Box,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Menu,\n  MenuItem,\n  TableBody,\n  Button,\n  TableContainer,\n  Paper,\n  Avatar,\n} from \"@material-ui/core\";\nimport Page from \"src/component/Page\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport {\n  CategoryButtons,\n  exploreData,\n  paginationLimit,\n  TokenAddressToUsed,\n} from \"src/constants\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport MetricsChart from \"src/component/MetricsChart\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { MdOutlineMore } from \"react-icons/md\";\n\nimport Profile from \"../Profile/Profile\";\nimport axios from \"axios\";\nimport ApiConfig, { socketURL } from \"src/config/APICongig\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { UserContext } from \"src/context/User\";\nimport moment from \"moment\";\nimport { sortAddress } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport PriceCheckerTable from \"src/component/PriceChecker/PriceCheckerTable\";\n\nimport DashboardnewCard from \"./DashboardnewCard\";\nimport LineChart from \"./LineChart\";\nconst useStyles = makeStyles((theme) => ({\n  bannerBox: {\n    \"& .MuiTableCell-root\": {\n      height: \"56px\",\n      padding: \"0 10px\",\n    },\n\n    \"& .MuiTableCell-body\": {\n      height: \"56px\",\n      padding: \"0 10px\",\n    },\n    // padding: \"50px 0px\",\n    textAlign: \"center\",\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: \"10px 0px\",\n    },\n    \"& h2\": {\n      fontSize: \"33px\",\n      fontWeight: \"500\",\n      color: \"rgba(61, 61, 61, 1) !important\",\n    },\n    \"& h3\": {\n      color: \"rgba(61, 61, 61, 1) !important\",\n    },\n    \"& > *\": {\n      marginTop: theme.spacing(2),\n    },\n    \"& .accountBox\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"end\",\n    },\n    \"& .moreBox1\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      \"& p\": {\n        color: \"#14133b\",\n      },\n      \"& svg\": {\n        fontSize: \"25px\",\n        marginLeft: \"8px\",\n        color: \"#14133b\",\n      },\n    },\n    \"& .moreBox\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"end\",\n      cursor: \"pointer\",\n      \"& p\": {\n        color: \"#14133b\",\n      },\n      \"& svg\": {\n        fontSize: \"25px\",\n        marginLeft: \"8px\",\n        color: \"#14133b\",\n      },\n    },\n    \"& .left\": {\n      \"& h2\": {\n        color: \"#14133b\",\n      },\n    },\n  },\n  filterBtn: {\n    margin: \"10px 3px\",\n    fontSize: \"14px\",\n    background: \"rgb(8, 86, 204)\",\n    color: \"#fff\",\n    boxShadow: \"0px 4px 4px rgb(0 0 0 / 25%)\",\n    boxSizing: \"border-box\",\n    fontWeight: \"500\",\n    lineHeight: \"20px\",\n    borderRadius: \"5px\",\n  },\n  imgtextbox: {\n    width: \"600px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"300px\",\n    },\n  },\n  tableBaseContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#190a2c\",\n    borderRadius: \"0px 0px 5px 5px\",\n  },\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#ffffff\",\n    },\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#ffffff\",\n    },\n  },\n  filterBtn: {\n    margin: \"10px 3px\",\n    fontSize: \"14px\",\n    background: \"rgb(8, 86, 204)\",\n    color: \"#fff\",\n    boxShadow: \"0px 4px 4px rgb(0 0 0 / 25%)\",\n    boxSizing: \"border-box\",\n    fontWeight: \"500\",\n    lineHeight: \"20px\",\n    borderRadius: \"5px\",\n  },\n  page: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n\n    \"@media (max-width: 375px)\": {\n      display: \"block\",\n    },\n  },\n  ExecutionName: {\n    \"& .headingBox\": {\n      \"& h2\": {\n        color: \"#14133b\",\n      },\n    },\n  },\n  PriceCheckerBox: {\n    \"& .headingBox\": {\n      \"& h2\": {\n        color: \"#14133b\",\n      },\n    },\n  },\n  AccountbalanceBox: {\n    \"& h2\": {\n      color: \"#14133b\",\n    },\n    \"& h6\": {\n      color: \"#14133b\",\n    },\n    \"& .verProfit\": {\n      writingMode: \"vertical-rl\",\n      textOrientation: \"upright\",\n    },\n    \"& .d-Flx\": {\n      display: \"flex\",\n    },\n  },\n}));\nconst tableData1 = [\n  {\n    TxHash: \"0x000000012\",\n    CoinName: \"BTC\",\n    ExchangeA: \"Uniswap$1,100\",\n    ExchangeB: \"Sushiswap$1,250\",\n    DateTime: \"04/07/22 11:32\",\n    PriceDifference: \"Price Difference\",\n    Profit: \"$123\",\n  },\n  {\n    TxHash: \"0x000000012\",\n    CoinName: \"BTC\",\n    ExchangeA: \"Uniswap$1,100\",\n    ExchangeB: \"Sushiswap$1,250\",\n    DateTime: \"04/07/22 11:32\",\n    PriceDifference: \"Price Difference\",\n    Profit: \"$123\",\n  },\n  {\n    TxHash: \"0x000000012\",\n    CoinName: \"BTC\",\n    ExchangeA: \"Uniswap$1,100\",\n    ExchangeB: \"Sushiswap$1,250\",\n    DateTime: \"04/07/22 11:32\",\n    PriceDifference: \"Price Difference\",\n    Profit: \"$123\",\n  },\n  {\n    TxHash: \"0x000000012\",\n    CoinName: \"BTC\",\n    ExchangeA: \"Uniswap$1,100\",\n    ExchangeB: \"Sushiswap$1,250\",\n    DateTime: \"04/07/22 11:32\",\n    PriceDifference: \"Price Difference\",\n    Profit: \"$123\",\n  },\n];\n\nfunction Features() {\n  const [value, setValue] = React.useState(2);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const classes = useStyles();\n  const [recentCol, setRecentCol] = React.useState(null);\n  const [selectRankingDays, setSelectRankingDays] = useState();\n  const [profit, setProfit] = useState(\"profit\");\n  const [executionsList, setexecutionsList] = useState();\n  const [executionsList1, setexecutionsList1] = useState([]);\n  const [graphData, setgraphData] = useState();\n  const [dashboard, setdashboard] = useState();\n  const { account } = useWeb3React();\n  const user = useContext(UserContext);\n  const history = useHistory();\n\n  const [daiWeth, setdaiWeth] = useState([]);\n  const [daiUsdc, setdaiUsdc] = useState([]);\n  const [wethUsdc, setwethUsdc] = useState([]);\n  const [uniWeth, setuniWeth] = useState([]);\n  const dashboardHandler = async () => {\n    try {\n      const res = await axios({\n        method: \"GET\",\n        url: ApiConfig.dashboard,\n        headers: {\n          token:\n            sessionStorage.getItem(\"token\") ||\n            localStorage.getItem(\"creatturAccessToken\"),\n        },\n      });\n      if (res.data.responseCode == 200) {\n        // setgraphData(res.data.result);\n        setdashboard(res.data.result);\n        // console.log(\"total-----results:----\", res.data.result.docs);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const graphHandler = async () => {\n    try {\n      const res = await axios({\n        method: \"GET\",\n        url: ApiConfig.graph,\n        headers: {\n          token:\n            sessionStorage.getItem(\"token\") ||\n            localStorage.getItem(\"creatturAccessToken\"),\n        },\n      });\n      if (res.data.responseCode == 200) {\n        // setdashboard(res.data.result);\n        let list = res.data.result;\n        setgraphData(list?.reverse());\n        // console.log(\"total-----results:----\", res.data.result);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const buyTokenHandler = async () => {\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: ApiConfig.buyTokenList,\n        headers: {\n          token:\n            sessionStorage.getItem(\"token\") ||\n            localStorage.getItem(\"creatturAccessToken\"),\n        },\n      });\n      if (res.data.responseCode == 200) {\n        setexecutionsList(res.data.result);\n        setexecutionsList1(res.data.result.docs);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (account && user.isLogin) {\n      buyTokenHandler();\n      graphHandler();\n      dashboardHandler();\n    }\n  }, [account, user.isLogin]);\n  useEffect(() => {\n    try {\n      const web = new WebSocket(socketURL);\n      web.onopen = () => {\n        const dataToSend = {\n          option: \"compareUniShibaGushiGivenTokenIn\",\n          fromToken: \"DAI\",\n          toToken: \"WETH\",\n          amounts: 0.001,\n        };\n\n        web.send(JSON.stringify(dataToSend));\n        web.onmessage = async (event) => {\n          // && event.data !== \"null\"\n          if (event.data !== \"[object Promise]\") {\n            let newObj = JSON.parse(event.data);\n            console.log(\"newObj-socket--\", newObj);\n            setdaiWeth(newObj);\n          }\n        };\n\n        const dataToSend1 = {\n          option: \"compareUniShibaGushiGivenTokenIn\",\n          fromToken: \"DAI\",\n          toToken: \"USDC\",\n          amounts: 0.001,\n        };\n        web.send(JSON.stringify(dataToSend1));\n        web.onmessage = async (event) => {\n          // && event.data !== \"null\"\n          if (event.data !== \"[object Promise]\") {\n            let newObj = JSON.parse(event.data);\n            // console.log(\"newObj-socket-11-\", newObj);\n\n            setdaiUsdc(newObj);\n          }\n        };\n        const dataToSend2 = {\n          option: \"compareUniShibaGushiGivenTokenIn\",\n          fromToken: \"WETH\",\n          toToken: \"USDC\",\n          amounts: 0.001,\n        };\n\n        web.send(JSON.stringify(dataToSend2));\n        web.onmessage = async (event) => {\n          // && event.data !== \"null\"\n          if (event.data !== \"[object Promise]\") {\n            let newObj = JSON.parse(event.data);\n            // console.log(\"newObj-socket-22-\", newObj);\n            setwethUsdc(newObj);\n          }\n        };\n\n        const dataToSend3 = {\n          option: \"compareUniShibaGushiGivenTokenIn\",\n          fromToken: \"UNI\",\n          toToken: \"WETH\",\n          amounts: 0.001,\n        };\n\n        web.send(JSON.stringify(dataToSend3));\n        web.onmessage = async (event) => {\n          // && event.data !== \"null\"\n          if (event.data !== \"[object Promise]\") {\n            let newObj = JSON.parse(event.data);\n            // console.log(\"newObj-socket-33-\", newObj);\n            setuniWeth(newObj);\n          }\n        };\n      };\n      return () => {\n        web.close();\n      };\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  });\n\n  return (\n    <>\n      <Page title=\"Dashboard\">\n        {/* <Profile /> */}\n\n        <Box className={classes.bannerBox}>\n          {/* <Paper elevation={2}>\n            <Typography variant=\"h2\" style={{ textAlign: \"left\" }}>\n              Overview\n            </Typography>\n          </Paper> */}\n          <DashboardnewCard />\n\n          <Box mt={6} className={classes.ExecutionName}>\n            <Paper elevation={2} style={{ padding: \"20px\" }}>\n              <Box\n                align=\"left\"\n                mb={2}\n                className=\"headingBox displaySpaceBetween\"\n              >\n                <Typography variant=\"h3\">Executions</Typography>\n                <Typography\n                  variant=\"h6\"\n                  style={{ color: \"rgba(0, 184, 238, 1)\", cursor: \"pointer\" }}\n                >\n                  View\n                </Typography>\n              </Box>\n              <TableContainer style={{ marginBottom: \"20px\" }}>\n                <Table>\n                  <TableHead>\n                    <TableRow\n                      style={{ backgroundColor: \"rgba(65, 22, 67, 1)\" }}\n                    >\n                      <TableCell>Tx Hash</TableCell>\n                      <TableCell style={{ minWidth: \"90px\" }}>\n                        Coin Name\n                      </TableCell>\n                      <TableCell>Exchange A</TableCell>\n                      <TableCell>Exchange B</TableCell>\n                      <TableCell style={{ textAlign: \"center\" }}>\n                        Price Difference\n                      </TableCell>\n                      <TableCell style={{ textAlign: \"center\" }}>\n                        Date/Time\n                      </TableCell>\n\n                      <TableCell>Profit</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {tableData1 &&\n                      tableData1?.map((data, index) => {\n                        return (\n                          <TableRow className={classes.root}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {/* {sortAddress(data?.transactionHash)} */}\n                              {data?.TxHash}\n                            </TableCell>\n                            <TableCell>\n                              <Box\n                                className=\"displayStart\"\n                                style={{ alignItems: \"flex-end\" }}\n                              >\n                                <Avatar\n                                  src=\"/images/bnb_icon.svg\"\n                                  width=\"30px\"\n                                  height=\"30px\"\n                                />\n                                &nbsp;\n                                <Typography\n                                  variant=\"h6\"\n                                  style={{ color: \"rgba(61, 61, 61, 1)\" }}\n                                >\n                                  {data?.CoinName}\n                                </Typography>\n                                &nbsp; Bitcoin\n                              </Box>\n                            </TableCell>\n                            <TableCell style={{ textTransform: \"capitalize\" }}>\n                              {\" \"}\n                              {data?.ExchangeA}\n                            </TableCell>\n                            <TableCell style={{ textTransform: \"capitalize\" }}>\n                              {\" \"}\n                              {data?.ExchangeB}\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                color: \"rgb(255, 85, 0)\",\n                                textAlign: \"center\",\n                              }}\n                            >\n                              {\" \"}\n                              $43\n                            </TableCell>\n                            <TableCell style={{ textAlign: \"center\" }}>\n                              {/* {data?.DateTime} */}\n                              29-Nov-2023, 09:23 PM\n                            </TableCell>\n                            {/* <TableCell>{data?.DateTime}</TableCell> */}\n\n                            <TableCell style={{ color: \"rgb(255, 85, 0)\" }}>\n                              {\" \"}\n                              {data?.Profit}\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    {/* {executionsList1.length == 0 && (\n                      <Box align=\"center\" className=\"moreBox1\">\n                        <Typography variant=\"body2\">\n                          No Execution Founds\n                        </Typography>\n                      </Box>\n                    )} */}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n\n              {/* <Box align=\"right\" mt={3} className={classes.page}>\n                <Pagination\n                  count={1}\n                  siblingCount={0}\n                  // variant=\"outlined\"\n                  // shape=\"rounded\"\n                  showFirstButton\n                  showLastButton\n                />\n                <Button\n                  className={classes.filterBtn}\n                  onClick={(event) => setRecentCol(event.currentTarget)}\n                >\n                  {selectRankingDays ? selectRankingDays.name.toString() : \"10\"}\n                  <ArrowDropDownIcon />\n                </Button>\n              </Box> */}\n              {executionsList?.docs.length > 5 && (\n                <Box\n                  align=\"right\"\n                  className=\"moreBox\"\n                  mt={3}\n                  onClick={() => history.push(\"/transaction\")}\n                >\n                  <Typography variant=\"body2\">More Executions</Typography>\n\n                  {/* <img src=\"images/info.svg\" alt=\"image\" /> */}\n                  <MdOutlineMore />\n                </Box>\n              )}\n              {/* <hr\n                style={{\n                  width: \"60px\",\n                  marginTop: \"6px\",\n                  border: \"1px solid rgb(8, 86, 204)\",\n                  float: \"right\",\n                }}\n              /> */}\n              {/* <Box align=\"right\">\n              <hr />\n            </Box> */}\n            </Paper>\n          </Box>\n\n          <Box mt={6} className={classes.PriceCheckerBox}>\n            <Paper elevation={2} style={{ padding: \"20px\" }}>\n              <Box\n                align=\"left\"\n                mb={2}\n                className=\"headingBox displaySpaceBetween\"\n              >\n                <Typography variant=\"h3\">Price Checker</Typography>\n                <Typography\n                  variant=\"h6\"\n                  style={{ color: \"rgba(0, 184, 238, 1)\", cursor: \"pointer\" }}\n                >\n                  View\n                </Typography>\n              </Box>\n              <TableContainer style={{ marginBottom: \"20px\" }}>\n                <Table>\n                  <TableHead>\n                    <TableRow\n                      style={{ backgroundColor: \"rgba(243, 109, 54, 1)\" }}\n                    >\n                      <TableCell>Trx Hash</TableCell>\n                      <TableCell style={{ minWidth: \"90px\" }}>\n                        Coin Name\n                      </TableCell>\n                      <TableCell>Exchange A</TableCell>\n                      <TableCell>Exchange B</TableCell>\n\n                      <TableCell style={{ textAlign: \"center\" }}>\n                        Price Difference\n                      </TableCell>\n                      <TableCell style={{ textAlign: \"center\" }}>\n                        Date/Time\n                      </TableCell>\n                      <TableCell>Profit</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {TokenAddressToUsed &&\n                      TokenAddressToUsed?.map((data, index) => {\n                        if (\n                          data.heading == \"ETH\" ||\n                          // data.heading == \"WETH\" ||\n                          // data.heading == \"USDT\" ||\n                          data.heading == \"HT\" ||\n                          data.heading == \"USDC\"\n                        ) {\n                          return;\n                        }\n                        return (\n                          <>\n                            <PriceCheckerTable data={data} />\n                          </>\n                        );\n                      })}\n                    {/* {daiWeth && daiWeth.length !== 0 && ( \n                    <TableRow className={classes.root}>\n                     <TableCell component=\"th\" scope=\"row\">\n                        \n                        <Switch\n                          // checked={state.checkedB}\n                          onChange={handleChange}\n                          inputProps={{\n                            \"aria-label\": \"primary checkbox\",\n                          }}\n                        />\n                      </TableCell> \n                          {daiWeth && daiWeth[0] && (\n                            <TableCell>\n                              {\" \"}\n                              <label\n                                style={{\n                                  background: \"rgba(255, 5, 5, 0.31)\",\n                                  borderRadius: \"4px\",\n                                  padding: \"5px\",\n                                }}\n                              >\n                                {`${daiWeth[0]?.res1?.fromTokenName}/${daiWeth[0]?.res1?.toTokenName}`}\n                              </label>\n                            </TableCell>\n                          )}\n\n                          <TableCell>\n                            {\" \"}\n                            {`${daiWeth[0]?.res1?.exchange} $${daiWeth[0]?.res1?.fromPrice}`}\n                          </TableCell>\n                          <TableCell>\n                            {\" \"}\n                            {`${daiWeth[0]?.res2?.exchange} $${daiWeth[0]?.res2?.toPrice}`}\n                          </TableCell>\n                          <TableCell>\n                            {parseFloat(daiWeth[0]?.res1?.fromPrice) -\n                              parseFloat(daiWeth[0]?.res1?.toPrice)}\n                          </TableCell>\n                          <TableCell>{daiWeth[0]?.res3?.price}</TableCell>\n                        </TableRow> \n               )} */}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n\n              {/* <Box align=\"right\" mt={3} className={classes.page}>\n                <Pagination\n                  count={1}\n                  siblingCount={0}\n                  // variant=\"outlined\"\n                  // shape=\"rounded\"\n                  showFirstButton\n                  showLastButton\n                />\n                <Button\n                  className={classes.filterBtn}\n                  onClick={(event) => setRecentCol(event.currentTarget)}\n                >\n                  {selectRankingDays ? selectRankingDays.name.toString() : \"10\"}\n                  <ArrowDropDownIcon />\n                </Button>\n              </Box> */}\n              {TokenAddressToUsed && TokenAddressToUsed.length > 10 && (\n                <Box align=\"right\" className=\"moreBox\" mt={3}>\n                  <Typography variant=\"body2\">More Executions</Typography>\n                  {/* <img src=\"images/info.svg\" alt=\"image\" /> */}\n                  <MdOutlineMore />\n                </Box>\n              )}\n              {/* <Box>\n                <hr\n                  style={{\n                    width: \"60px\",\n                    marginTop: \"6px\",\n                    border: \"1px solid #3c4c56\",\n                    float: \"right\",\n                  }}\n                />\n              </Box> */}\n            </Paper>\n          </Box>\n\n          <Box className={classes.AccountbalanceBox} mb={4}>\n            <Paper elevation={2} style={{ padding: \"20px\" }}>\n              <Grid container spacing={2}>\n                <Grid item lg={6} xs={12} sm={4} align=\"left\">\n                  <Typography variant=\"h2\">Account balance</Typography>\n                </Grid>\n                <Grid item lg={6} xs={12} sm={8} align=\"right\">\n                  <Box className=\"accountBox\">\n                    <Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      color={profit == \"profit\" ? \"primary\" : \"primary\"}\n                      style={{ marginRight: \"15px\", minWidth: \"165px\" }}\n                      onClick={() => setProfit(\"profit\")}\n                    >\n                      Profit / TX\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"large\"\n                      style={{ whiteSpace: \"pre\" }}\n                      // color=\"secondary\"\n                      color={profit != \"profit\" ? \"primary\" : \"primary\"}\n                      onClick={() => setProfit(\"failed\")}\n                    >\n                      Failed reverted\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item xs={12}>\n                  <Box className=\"d-Flx\">\n                    <Box className=\"verProfit\">\n                      {\" \"}\n                      <Typography variant=\"h6\">\n                        {\" \"}\n                        {profit == \"profit\" ? \"PROFIT\" : \"FAILED TX\"}\n                      </Typography>\n                    </Box>\n                    <Box mt={2} width=\"100%\">\n                      {/* <MetricsChart\n                        graphData={graphData}\n                        profit={profit == \"profit\"}\n                      /> */}\n\n                      {/* <MetricsChart\n                        graphData={[4, 5, 3, 5, 4, 6, 5, 7, 6, 5]}\n                        profit={true}\n                      /> */}\n                      {/* <LineChart /> */}\n                      <LineChart profit={true} />\n                    </Box>\n                  </Box>\n                </Grid>\n                {/* <Grid item lg={12} xs={12} sm={12} align=\"center\">\n                  <Typography variant=\"h6\">Time</Typography>\n                </Grid> */}\n              </Grid>\n            </Paper>\n          </Box>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={recentCol}\n            keepMounted\n            className={classes.MenuSelector}\n            open={Boolean(recentCol)}\n            onClose={() => setRecentCol(null)}\n          >\n            <MenuItem\n              onClick={() => {\n                setRecentCol(null);\n                setSelectRankingDays();\n              }}\n            >\n              10\n            </MenuItem>\n            {paginationLimit?.map((data, i) => {\n              return (\n                <MenuItem\n                  onClick={() => {\n                    setRecentCol(null);\n                    setSelectRankingDays(data);\n                  }}\n                  key={i}\n                >\n                  {data.name}\n                </MenuItem>\n              );\n            })}\n          </Menu>\n        </Box>\n      </Page>\n    </>\n  );\n}\n\nexport default Features;\n"],"sourceRoot":""}