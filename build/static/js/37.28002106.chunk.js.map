{"version":3,"sources":["views/pages/Auth/Forgot/Index.js"],"names":["useStyles","makeStyles","theme","forgotSection","height","position","overflowY","marginTop","color","fontWeight","fontSize","textAlign","margin","maxWidth","width","maxHeight","fontFamily","marginBottom","Forgot","history","useHistory","classes","useState","isUpdating","setIsUpdating","formValidationSchema","yep","shape","email","required","handleFormSubmit","values","a","postAPIHandler","endPoint","dataToSend","response","data","responseCode","toast","success","responseMessage","push","pathname","state","type","error","className","elevation","align","src","alt","variant","mt","initialValues","validationSchema","onSubmit","errors","handleBlur","handleChange","touched","handleSubmit","setFieldValue","placeholder","name","fullWidth","value","Boolean","onBlur","onChange","mb","disabled"],"mappings":"+WAiBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,cAAe,CACbC,OAAQ,qBACRC,SAAU,WACVC,UAAW,OACX,8BAA+B,CAC7BC,UAAW,OAEb,UAAW,CACTC,MAAO,uBAET,mBAAoB,CAClBJ,OAAQ,OACRC,SAAU,WACVC,UAAW,OAEX,MAAO,CACLG,WAAY,MACZD,MAAO,uBAET,OAAQ,CACNA,MAAO,sBACPE,SAAU,OACVC,UAAW,UAEb,eAAgB,CACdP,OAAQ,UACRQ,OAAQ,WACRC,SAAU,MACVC,MAAO,QACPC,UAAW,QAGb,OAAQ,CACNP,MAAO,oBACPC,WAAY,IACZO,WAAY,yBAGd,qBAAsB,CACpB,MAAO,CACLR,MAAO,uBAET,SAAU,CACRC,WAAY,IACZD,MAAO,yBAGX,aAAc,CACZ,QAAS,CACPM,MAAO,OACPV,OAAQ,OACRa,aAAc,eAMT,SAASC,IACtB,IAAMC,EAAUC,cACVC,EAAUrB,IAChB,EAAoCsB,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAKMC,EAAuBC,MAAaC,MAAM,CAC9CC,MAAOF,MAEJE,MAAM,4BACNC,SAAS,wBAGRC,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAErBR,GAAc,GAFO,SAGES,YAAe,CACpCC,SAAU,iBACVC,WAAY,CACVP,MAAOG,EAAOH,SANG,OASc,OAN7BQ,EAHe,QASRC,KAAKC,cAChBC,IAAMC,QAAQJ,EAASC,KAAKI,iBAC5BtB,EAAQuB,KAAK,CACXC,SAAU,cACVC,MAAO,CAAEhB,MAAOG,EAAOH,MAAOiB,KAAM,aAGtCN,IAAMO,MAAMV,EAASC,KAAKI,iBAE5BjB,GAAc,GAlBO,gDAoBrBA,GAAc,GApBO,yDAAH,sDAwBtB,OACE,kBAAC,IAAD,CAAKuB,UAAW1B,EAAQlB,eACtB,kBAAC,IAAD,CAAK4C,UAAU,+BACb,kBAAC,IAAD,CAAKA,UAAU,aACb,kBAAC,IAAD,CAAOC,UAAW,GAChB,kBAAC,IAAD,CAAKD,UAAU,iBACb,kBAAC,IAAD,CAAKA,UAAU,UAAUE,MAAM,UAC7B,yBAAKC,IAAI,yBAAyBC,IAAI,UAExC,kBAAC,IAAD,CAAYC,QAAQ,MAApB,mBACA,kBAAC,IAAD,CAAKL,UAAU,gCAAgCE,MAAM,UACnD,kBAAC,IAAD,CAAYG,QAAQ,QAAQC,GAAI,EAAG1C,UAAU,UAA7C,6FAMJ,kBAAC,IAAD,CACE2C,cApDU,CACpB1B,MAAO,IAoDG2B,iBAAkB9B,EAClB+B,SAAU,SAACzB,GAAD,OAAYD,EAAiBC,MAEtC,gBACC0B,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aAEAC,GALD,EAICC,aAJD,EAKCD,SACA7B,EAND,EAMCA,OAND,EAOC+B,cAPD,OASC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKT,GAAI,EAAGN,UAAU,eACpB,wCACA,kBAAC,IAAD,CACEgB,YAAY,iBACZlB,KAAK,QACLmB,KAAK,QACLC,WAAS,EACTb,QAAQ,WACRc,MAAOnC,EAAOH,MACdkB,MAAOqB,QAAQP,EAAQhC,OAAS6B,EAAO7B,OACvCwC,OAAQV,EACRW,SAAUV,IAEZ,kBAAC,IAAD,CAAgBb,OAAK,EAACC,UAAU,aAC7Ba,EAAQhC,OAAS6B,EAAO7B,QAG7B,kBAAC,IAAD,CAAK0C,GAAI,EAAGjB,GAAI,EAAGN,UAAU,iBAC3B,kBAAC,IAAD,CACEK,QAAQ,YACR5C,MAAM,UACNqC,KAAK,SACLoB,WAAS,EACTM,SAAUhD,GALZ,SAQGA,GAAc,kBAAC,IAAD","file":"static/js/37.28002106.chunk.js","sourcesContent":["import {\n  Box,\n  Button,\n  FormHelperText,\n  Paper,\n  TextField,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport * as yep from \"yup\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport { postAPIHandler } from \"src/config/service\";\nimport { toast } from \"react-toastify\";\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  forgotSection: {\n    height: \"calc(100vh - 75px)\",\n    position: \"relative\",\n    overflowY: \"auto\",\n    \"& .MuiFormControl-fullWidth\": {\n      marginTop: \"8px\",\n    },\n    \"& label\": {\n      color: \"rgba(61, 61, 61, 1)\",\n    },\n    \"& .forgotMainBox\": {\n      height: \"100%\",\n      position: \"relative\",\n      overflowY: \"auto\",\n\n      \"& p\": {\n        fontWeight: \"400\",\n        color: \"rgba(61, 61, 61, 1)\",\n      },\n      \"& h2\": {\n        color: \"rgba(61, 61, 61, 1)\",\n        fontSize: \"40px\",\n        textAlign: \"center\",\n      },\n      \"& .forgotBox\": {\n        height: \"initail\",\n        margin: \"0px auto\",\n        maxWidth: \"95%\",\n        width: \"550px\",\n        maxHeight: \"100%\",\n      },\n\n      \"& h6\": {\n        color: \"rgba(8, 5, 21, 1)\",\n        fontWeight: 500,\n        fontFamily: \"'Poppins', sans-serif\",\n      },\n\n      \"& .descriptionText\": {\n        \"& p\": {\n          color: \"rgba(0, 0, 0, 0.40)\",\n        },\n        \"& span\": {\n          fontWeight: 600,\n          color: \" rgba(255, 85, 0, 1)\",\n        },\n      },\n      \"& .logoBox\": {\n        \"& img\": {\n          width: \"auto\",\n          height: \"50px\",\n          marginBottom: \"24px\",\n        },\n      },\n    },\n  },\n}));\nexport default function Forgot() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const initialValues = {\n    email: \"\",\n  };\n  const formValidationSchema = yep.object().shape({\n    email: yep\n      .string()\n      .email(\"Please enter your email.\")\n      .required(\"Email is required.\"),\n  });\n\n  const handleFormSubmit = async (values) => {\n    try {\n      setIsUpdating(true);\n      const response = await postAPIHandler({\n        endPoint: \"forgotPassword\",\n        dataToSend: {\n          email: values.email,\n        },\n      });\n      if (response.data.responseCode === 200) {\n        toast.success(response.data.responseMessage);\n        history.push({\n          pathname: \"/Verify-Otp\",\n          state: { email: values.email, type: \"FORGOT\" },\n        });\n      } else {\n        toast.error(response.data.responseMessage);\n      }\n      setIsUpdating(false);\n    } catch (error) {\n      setIsUpdating(false);\n    }\n  };\n\n  return (\n    <Box className={classes.forgotSection}>\n      <Box className=\"forgotMainBox displayCenter\">\n        <Box className=\"forgotBox\">\n          <Paper elevation={2}>\n            <Box className=\"displayColumn\">\n              <Box className=\"logoBox\" align=\"center\">\n                <img src=\"/images/forgotLogo.png\" alt=\"Logo\" />\n              </Box>\n              <Typography variant=\"h2\">Forgot Password</Typography>\n              <Box className=\"displayCenter descriptionText\" align=\"center\">\n                <Typography variant=\"body1\" mt={2} textAlign=\"center\">\n                  Enter your email for the verification process, we will send 6\n                  digits code to your email\n                </Typography>\n              </Box>\n            </Box>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={formValidationSchema}\n              onSubmit={(values) => handleFormSubmit(values)}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                touched,\n                values,\n                setFieldValue,\n              }) => (\n                <Form>\n                  <Box mt={2} className=\"mainTextBox\">\n                    <label>Email</label>\n                    <TextField\n                      placeholder=\"Enter email Id\"\n                      type=\"email\"\n                      name=\"email\"\n                      fullWidth\n                      variant=\"outlined\"\n                      value={values.email}\n                      error={Boolean(touched.email && errors.email)}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                    />\n                    <FormHelperText error className=\"errorText\">\n                      {touched.email && errors.email}\n                    </FormHelperText>\n                  </Box>\n                  <Box mb={2} mt={4} className=\"displayCenter\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      disabled={isUpdating}\n                    >\n                      Submit\n                      {isUpdating && <ButtonCircularProgress />}\n                    </Button>\n                  </Box>\n                </Form>\n              )}\n            </Formik>\n          </Paper>\n        </Box>\n      </Box>\n      {/* {isLoading && <PageLoader />} */}\n    </Box>\n  );\n}\n"],"sourceRoot":""}